{"version":3,"sources":["views/Voting/components/DesktopImage.tsx","views/Voting/components/Footer.tsx","views/Voting/components/Hero.tsx","views/Voting/components/Proposals/ProposalsLoading.tsx","views/Voting/components/Proposals/TabMenu.tsx","views/Voting/components/Proposals/TimeFrame.tsx","views/Voting/components/Proposals/ProposalRow.tsx","views/Voting/components/Proposals/Filters.tsx","views/Voting/components/Proposals/Proposals.tsx","views/Voting/index.tsx","views/Voting/helpers.ts","views/Voting/config.ts","state/voting/hooks.ts","views/Voting/components/Proposals/tags.tsx"],"names":["DesktopImage","styled","Image","theme","mediaQueries","lg","StyledFooter","Box","colors","gradients","bubblegum","Footer","t","useTranslation","Container","alignItems","justifyContent","pr","as","scale","mb","startIcon","color","width","Link","to","src","height","StyledHero","Hero","Row","Flex","cardBorder","Wrapper","div","ProposalsLoading","times","PROPOSALS_TO_SHOW","map","index","py","px","style","flex","StyledTabMenu","input","getIndexFromType","proposalType","ProposalType","COMMUNITY","ALL","CORE","TabMenu","onTypeChange","activeIndex","onItemClick","getTypeFromIndex","mr","getFormattedDate","timestamp","date","toDate","format","TimeFrame","startDate","endDate","proposalState","textProps","fontSize","ml","ProposalState","CLOSED","PENDING","StyledProposalRow","dropdown","ProposalRow","proposal","votingLink","id","bold","title","start","end","state","isCoreProposal","variant","StyledFilters","attrs","FilterLabel","label","options","value","ACTIVE","Filters","filterState","onFilterChange","isLoading","checked","onChange","evt","radioValue","currentTarget","disabled","Proposals","useState","setState","proposalStatus","useGetProposalLoadingStatus","proposals","useGetProposals","dispatch","useAppDispatch","FetchStatus","Fetching","isFetched","Fetched","useEffect","fetchProposals","first","filteredProposals","filterProposalsByState","filterProposalsByType","newProposalType","prevState","newFilterState","length","p","Chrome","Content","Voting","Page","flexDirection","minHeight","ADMINS","includes","author","toLowerCase","filter","generateMetaData","plugins","network","strategies","name","params","symbol","address","tokens","cake","decimals","generatePayloadData","version","SNAPSHOT_VERSION","Date","now","toFixed","space","PANCAKE_SPACE","sendSnapshotData","message","a","fetch","SNAPSHOT_HUB_API","method","headers","Accept","body","JSON","stringify","response","ok","json","error","Error","error_description","data","getVotingPower","account","poolAddresses","block","simpleRpcProvider","getBlockNumber","blockNumber","SNAPSHOT_VOTING_API","calculateVoteResults","votes","reduce","accum","vote","choiceText","choices","choice","getTotalFromVotes","power","parseFloat","metadata","votingPower","IPFS_GATEWAY","VOTE_THRESHOLD","useSelector","voting","Object","values","useGetProposal","proposalId","useGetVotes","_inValid","useGetVotingStateLoadingStatus","voteLoadingStatus","proposalLoadingStatus","ProposalStateTag","props","ProposalTypeTag"],"mappings":"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","file":"static/js/31.908bbf40.chunk.js","sourcesContent":["import { Image } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nconst DesktopImage = styled(Image)`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    display: block;\n  }\n`\n\nexport default DesktopImage\n","import React from 'react'\nimport { Box, Button, Text, Heading, ProposalIcon, Flex } from '@pancakeswap/uikit'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport Container from 'components/Layout/Container'\nimport DesktopImage from './DesktopImage'\n\nconst StyledFooter = styled(Box)`\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\n  padding-bottom: 32px;\n  padding-top: 32px;\n`\n\nconst Footer = () => {\n  const { t } = useTranslation()\n\n  return (\n    <StyledFooter>\n      <Container>\n        <Flex alignItems=\"center\" justifyContent=\"space-between\">\n          <Box pr=\"32px\">\n            <Heading as=\"h2\" scale=\"lg\" mb=\"16px\">\n              {t('Got a suggestion?')}\n            </Heading>\n            <Text as=\"p\">\n              {t('Community proposals are a great way to see how the community feels about your ideas.')}\n            </Text>\n            <Text as=\"p\" mb=\"16px\">\n              {t(\n                \"They won't necessarily be implemented if the community votes successful, but suggestions with a lot of community support may be made into Core proposals.\",\n              )}\n            </Text>\n\n            <Button\n              startIcon={<ProposalIcon color=\"currentColor\" width=\"24px\" />}\n              as={Link}\n              to=\"/voting/proposal/create\"\n            >\n              {t('Make a Proposal')}\n            </Button>\n          </Box>\n          <DesktopImage src=\"/images/voting/voting-bunny.png\" width={173} height={234} />\n        </Flex>\n      </Container>\n    </StyledFooter>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { Box, Button, Flex, Heading, ProposalIcon } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { Link } from 'react-router-dom'\nimport { useTranslation } from 'contexts/Localization'\nimport Container from 'components/Layout/Container'\nimport DesktopImage from './DesktopImage'\n\nconst StyledHero = styled(Box)`\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\n  padding-bottom: 32px;\n  padding-top: 32px;\n`\n\nconst Hero = () => {\n  const { t } = useTranslation()\n\n  return (\n    <StyledHero>\n      <Container>\n        <Flex alignItems=\"center\" justifyContent=\"space-between\">\n          <Box pr=\"32px\">\n            <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\" mb=\"16px\">\n              {t('Voting')}\n            </Heading>\n            <Heading as=\"h3\" scale=\"lg\" mb=\"16px\">\n              {t('Have your say in the future of the SilverlineSwap Ecosystem')}\n            </Heading>\n            <Button\n              startIcon={<ProposalIcon color=\"currentColor\" width=\"24px\" />}\n              as={Link}\n              to=\"/voting/proposal/create\"\n            >\n              {t('Make a Proposal')}\n            </Button>\n          </Box>\n          <DesktopImage src=\"/images/voting/voting-presents.png\" width={361} height={214} />\n        </Flex>\n      </Container>\n    </StyledHero>\n  )\n}\n\nexport default Hero\n","import React from 'react'\nimport { Box, Flex, Skeleton } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport times from 'lodash/times'\nimport { PROPOSALS_TO_SHOW } from '../../config'\n\nconst Row = styled(Flex)`\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n`\n\nconst Wrapper = styled.div`\n  ${Row}:last-child {\n    border-bottom: 0;\n  }\n`\n\nconst ProposalsLoading = () => {\n  return (\n    <Wrapper>\n      {times(PROPOSALS_TO_SHOW).map((index) => (\n        <Row key={index} alignItems=\"center\" justifyContent=\"space-between\" py=\"16px\" px=\"24px\">\n          <Box style={{ flex: 1 }}>\n            <Skeleton height=\"21px\" width=\"70%\" mb=\"4px\" />\n            <Skeleton height=\"21px\" width=\"30%\" mb=\"4px\" />\n            <Skeleton height=\"21px\" width=\"40%\" />\n          </Box>\n          <Skeleton height=\"32px\" width=\"32px\" />\n        </Row>\n      ))}\n    </Wrapper>\n  )\n}\n\nexport default ProposalsLoading\n","import React from 'react'\nimport styled from 'styled-components'\nimport { TabMenu as UIKitTabMenu, Tab, Flex, VerifiedIcon, CommunityIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { ProposalType } from 'state/types'\n\ninterface TabMenuProps {\n  proposalType: ProposalType\n  onTypeChange: (proposalType: ProposalType) => void\n}\n\nconst StyledTabMenu = styled.div`\n  background-color: ${({ theme }) => theme.colors.input};\n  padding-top: 16px;\n`\n\nconst getIndexFromType = (proposalType: ProposalType) => {\n  switch (proposalType) {\n    case ProposalType.COMMUNITY:\n      return 1\n    case ProposalType.ALL:\n      return 2\n    case ProposalType.CORE:\n    default:\n      return 0\n  }\n}\n\nconst getTypeFromIndex = (index: number) => {\n  switch (index) {\n    case 1:\n      return ProposalType.COMMUNITY\n    case 2:\n      return ProposalType.ALL\n    default:\n      return ProposalType.CORE\n  }\n}\n\nconst TabMenu: React.FC<TabMenuProps> = ({ proposalType, onTypeChange }) => {\n  const { t } = useTranslation()\n  const handleItemClick = (index: number) => {\n    onTypeChange(getTypeFromIndex(index))\n  }\n\n  return (\n    <StyledTabMenu>\n      <UIKitTabMenu activeIndex={getIndexFromType(proposalType)} onItemClick={handleItemClick}>\n        <Tab>\n          <Flex alignItems=\"center\">\n            <VerifiedIcon color=\"currentColor\" mr=\"4px\" />\n            {t('Core')}\n          </Flex>\n        </Tab>\n        <Tab>\n          {' '}\n          <Flex alignItems=\"center\">\n            <CommunityIcon color=\"currentColor\" mr=\"4px\" />\n            {t('Community')}\n          </Flex>\n        </Tab>\n        <Tab>All</Tab>\n      </UIKitTabMenu>\n    </StyledTabMenu>\n  )\n}\n\nexport default TabMenu\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { toDate, format } from 'date-fns'\nimport { useTranslation } from 'contexts/Localization'\nimport { ProposalState } from 'state/types'\n\ninterface TimeFrameProps {\n  startDate: number\n  endDate: number\n  proposalState: ProposalState\n}\n\nconst getFormattedDate = (timestamp: number) => {\n  const date = toDate(timestamp * 1000)\n  return format(date, 'MMM do, yyyy HH:mm')\n}\n\nconst TimeFrame: React.FC<TimeFrameProps> = ({ startDate, endDate, proposalState }) => {\n  const { t } = useTranslation()\n  const textProps = {\n    fontSize: '16px',\n    color: 'textSubtle',\n    ml: '8px',\n  }\n\n  if (proposalState === ProposalState.CLOSED) {\n    return <Text {...textProps}>{t('Ended %date%', { date: getFormattedDate(endDate) })}</Text>\n  }\n\n  if (proposalState === ProposalState.PENDING) {\n    return <Text {...textProps}>{t('Starts %date%', { date: getFormattedDate(startDate) })}</Text>\n  }\n\n  return <Text {...textProps}>{t('Ends %date%', { date: getFormattedDate(endDate) })}</Text>\n}\n\nexport default TimeFrame\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { ArrowForwardIcon, Box, IconButton, Flex, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { Proposal } from 'state/types'\nimport { isCoreProposal } from '../../helpers'\nimport TimeFrame from './TimeFrame'\nimport { ProposalStateTag, ProposalTypeTag } from './tags'\n\ninterface ProposalRowProps {\n  proposal: Proposal\n}\n\nconst StyledProposalRow = styled(Link)`\n  align-items: center;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  display: flex;\n  padding: 16px 24px;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n  }\n`\n\nconst ProposalRow: React.FC<ProposalRowProps> = ({ proposal }) => {\n  const votingLink = `/voting/proposal/${proposal.id}`\n\n  return (\n    <StyledProposalRow to={votingLink}>\n      <Box as=\"span\" style={{ flex: 1 }}>\n        <Text bold mb=\"8px\">\n          {proposal.title}\n        </Text>\n        <Flex alignItems=\"center\" mb=\"8px\">\n          <TimeFrame startDate={proposal.start} endDate={proposal.end} proposalState={proposal.state} />\n        </Flex>\n        <Flex alignItems=\"center\">\n          <ProposalStateTag proposalState={proposal.state} />\n          <ProposalTypeTag isCoreProposal={isCoreProposal(proposal)} ml=\"8px\" />\n        </Flex>\n      </Box>\n      <IconButton variant=\"text\">\n        <ArrowForwardIcon width=\"24px\" />\n      </IconButton>\n    </StyledProposalRow>\n  )\n}\n\nexport default ProposalRow\n","import React, { ChangeEvent } from 'react'\nimport { Flex, Radio, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { ProposalState } from 'state/types'\n\ninterface FiltersProps {\n  filterState: ProposalState\n  onFilterChange: (filterState: ProposalState) => void\n  isLoading: boolean\n}\n\nconst StyledFilters = styled(Flex).attrs({ alignItems: 'center' })`\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  padding: 16px 24px;\n`\n\nconst FilterLabel = styled.label`\n  align-items: center;\n  cursor: pointer;\n  display: flex;\n  margin-right: 16px;\n`\n\nconst options = [\n  { value: ProposalState.ACTIVE, label: 'Vote Now' },\n  { value: ProposalState.PENDING, label: 'Soon' },\n  { value: ProposalState.CLOSED, label: 'Closed' },\n]\n\nconst Filters: React.FC<FiltersProps> = ({ filterState, onFilterChange, isLoading }) => {\n  const { t } = useTranslation()\n\n  return (\n    <StyledFilters>\n      {options.map(({ value, label }) => {\n        const handleChange = (evt: ChangeEvent<HTMLInputElement>) => {\n          const { value: radioValue } = evt.currentTarget\n          onFilterChange(radioValue as ProposalState)\n        }\n\n        return (\n          <FilterLabel key={label}>\n            <Radio\n              scale=\"sm\"\n              value={value}\n              checked={filterState === value}\n              onChange={handleChange}\n              disabled={isLoading}\n            />\n            <Text ml=\"8px\">{t(label)}</Text>\n          </FilterLabel>\n        )\n      })}\n    </StyledFilters>\n  )\n}\n\nexport default Filters\n","import React, { useEffect, useState } from 'react'\nimport { Box, Breadcrumbs, Card, Flex, Heading, Text } from '@pancakeswap/uikit'\nimport { Link } from 'react-router-dom'\nimport { useTranslation } from 'contexts/Localization'\nimport Container from 'components/Layout/Container'\nimport { useAppDispatch } from 'state'\nimport { fetchProposals } from 'state/voting'\nimport { useGetProposalLoadingStatus, useGetProposals } from 'state/voting/hooks'\nimport { ProposalState, ProposalType } from 'state/types'\nimport { FetchStatus } from 'config/constants/types'\nimport { filterProposalsByState, filterProposalsByType } from '../../helpers'\nimport ProposalsLoading from './ProposalsLoading'\nimport TabMenu from './TabMenu'\nimport ProposalRow from './ProposalRow'\nimport Filters from './Filters'\n\ninterface State {\n  proposalType: ProposalType\n  filterState: ProposalState\n}\n\nconst Proposals = () => {\n  const { t } = useTranslation()\n  const [state, setState] = useState<State>({\n    proposalType: ProposalType.CORE,\n    filterState: ProposalState.ACTIVE,\n  })\n  const proposalStatus = useGetProposalLoadingStatus()\n  const proposals = useGetProposals()\n  const dispatch = useAppDispatch()\n\n  const { proposalType, filterState } = state\n  const isLoading = proposalStatus === FetchStatus.Fetching\n  const isFetched = proposalStatus === FetchStatus.Fetched\n\n  useEffect(() => {\n    dispatch(fetchProposals({ first: 1000, state: filterState }))\n  }, [filterState, dispatch])\n\n  const handleProposalTypeChange = (newProposalType: ProposalType) => {\n    setState((prevState) => ({\n      ...prevState,\n      proposalType: newProposalType,\n    }))\n  }\n\n  const handleFilterChange = (newFilterState: ProposalState) => {\n    setState((prevState) => ({\n      ...prevState,\n      filterState: newFilterState,\n    }))\n  }\n\n  const filteredProposals = filterProposalsByState(filterProposalsByType(proposals, proposalType), filterState)\n\n  return (\n    <Container py=\"40px\">\n      <Box mb=\"48px\">\n        <Breadcrumbs>\n          <Link to=\"/\">{t('Home')}</Link>\n          <Text>{t('Voting')}</Text>\n        </Breadcrumbs>\n      </Box>\n      <Heading as=\"h2\" scale=\"xl\" mb=\"32px\" id=\"voting-proposals\">\n        {t('Proposals')}\n      </Heading>\n      <Card>\n        <TabMenu proposalType={proposalType} onTypeChange={handleProposalTypeChange} />\n        <Filters filterState={filterState} onFilterChange={handleFilterChange} isLoading={isLoading} />\n        {isLoading && <ProposalsLoading />}\n        {isFetched &&\n          filteredProposals.length > 0 &&\n          filteredProposals.map((proposal) => {\n            return <ProposalRow key={proposal.id} proposal={proposal} />\n          })}\n        {isFetched && filteredProposals.length === 0 && (\n          <Flex alignItems=\"center\" justifyContent=\"center\" p=\"32px\">\n            <Heading as=\"h5\">{t('No proposals found')}</Heading>\n          </Flex>\n        )}\n      </Card>\n    </Container>\n  )\n}\n\nexport default Proposals\n","import { Flex } from '@pancakeswap/uikit'\nimport { PageMeta } from 'components/Layout/Page'\nimport React from 'react'\nimport styled from 'styled-components'\nimport Footer from './components/Footer'\nimport Hero from './components/Hero'\nimport { Proposals } from './components/Proposals'\n\nconst Chrome = styled.div`\n  flex: none;\n`\n\nconst Content = styled.div`\n  flex: 1;\n  height: 100%;\n`\n\nconst Voting = () => {\n  return (\n    <>\n      <PageMeta />\n      <Flex flexDirection=\"column\" minHeight=\"calc(100vh - 64px)\">\n        <Chrome>\n          <Hero />\n        </Chrome>\n        <Content>\n          <Proposals />\n        </Content>\n        <Chrome>\n          <Footer />\n        </Chrome>\n      </Flex>\n    </>\n  )\n}\n\nexport default Voting\n","import { SNAPSHOT_HUB_API, SNAPSHOT_VOTING_API } from 'config/constants/endpoints'\nimport tokens from 'config/constants/tokens'\nimport { Proposal, ProposalState, ProposalType, Vote } from 'state/types'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { ADMINS, PANCAKE_SPACE, SNAPSHOT_VERSION } from './config'\n\nexport const isCoreProposal = (proposal: Proposal) => {\n  return ADMINS.includes(proposal.author.toLowerCase())\n}\n\nexport const filterProposalsByType = (proposals: Proposal[], proposalType: ProposalType) => {\n  switch (proposalType) {\n    case ProposalType.COMMUNITY:\n      return proposals.filter((proposal) => !isCoreProposal(proposal))\n    case ProposalType.CORE:\n      return proposals.filter((proposal) => isCoreProposal(proposal))\n    case ProposalType.ALL:\n    default:\n      return proposals\n  }\n}\n\nexport const filterProposalsByState = (proposals: Proposal[], state: ProposalState) => {\n  return proposals.filter((proposal) => proposal.state === state)\n}\n\nexport interface Message {\n  address: string\n  msg: string\n  sig: string\n}\n\n/**\n * Generates metadata required by snapshot to validate payload\n */\nexport const generateMetaData = () => {\n  return {\n    plugins: {},\n    network: 56,\n    strategies: [{ name: 'cake', params: { symbol: 'SLCT', address: tokens.cake.address, decimals: 18 } }],\n  }\n}\n\n/**\n * Returns data that is required on all snapshot payloads\n */\nexport const generatePayloadData = () => {\n  return {\n    version: SNAPSHOT_VERSION,\n    timestamp: (Date.now() / 1e3).toFixed(),\n    space: PANCAKE_SPACE,\n  }\n}\n\n/**\n * General function to send commands to the snapshot api\n */\nexport const sendSnapshotData = async (message: Message) => {\n  const response = await fetch(SNAPSHOT_HUB_API, {\n    method: 'post',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(message),\n  })\n\n  if (!response.ok) {\n    const error = await response.json()\n    throw new Error(error?.error_description)\n  }\n\n  const data = await response.json()\n  return data\n}\n\nexport const getVotingPower = async (account: string, poolAddresses: string[], block?: number) => {\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n  const response = await fetch(`${SNAPSHOT_VOTING_API}/power`, {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      address: account,\n      block: blockNumber,\n      poolAddresses,\n    }),\n  })\n  const data = await response.json()\n  return data.data\n}\n\nexport const calculateVoteResults = (votes: Vote[]): { [key: string]: Vote[] } => {\n  return votes.reduce((accum, vote) => {\n    const choiceText = vote.proposal.choices[vote.choice - 1]\n\n    return {\n      ...accum,\n      [choiceText]: accum[choiceText] ? [...accum[choiceText], vote] : [vote],\n    }\n  }, {})\n}\n\nexport const getTotalFromVotes = (votes: Vote[]) => {\n  return votes.reduce((accum, vote) => {\n    let power = parseFloat(vote.metadata?.votingPower)\n\n    if (!power) {\n      power = 0\n    }\n\n    return accum + power\n  }, 0)\n}\n","export const PROPOSALS_TO_SHOW = 10\nexport const ADMINS = [\n  '0x842B508681eE336E74600974B4623B709477d29D', // TARO\n  '0x977e0c1005dff8749f8cac22f4df0bd5f013d1a7', // CHUNGUS\n  '0x6eaf1b33b8672c5dc40ab8f4ba3a0111723126c7', // HOPS\n].map((address) => address.toLowerCase())\nexport const IPFS_GATEWAY = 'https://gateway.ipfs.io/ipfs'\nexport const SNAPSHOT_VERSION = '0.1.3'\nexport const PANCAKE_SPACE = 'cake.eth'\nexport const VOTE_THRESHOLD = 10\n","import { useSelector } from 'react-redux'\nimport { State } from '../types'\n\n// Voting\nexport const useGetProposals = () => {\n  const proposals = useSelector((state: State) => state.voting.proposals)\n  return Object.values(proposals)\n}\n\nexport const useGetProposal = (proposalId: string) => {\n  const proposal = useSelector((state: State) => state.voting.proposals[proposalId])\n  return proposal\n}\n\nexport const useGetVotes = (proposalId: string) => {\n  const votes = useSelector((state: State) => state.voting.votes[proposalId])\n  return votes ? votes.filter((vote) => vote._inValid !== true) : []\n}\n\nexport const useGetVotingStateLoadingStatus = () => {\n  const votingStatus = useSelector((state: State) => state.voting.voteLoadingStatus)\n  return votingStatus\n}\n\nexport const useGetProposalLoadingStatus = () => {\n  const votingStatus = useSelector((state: State) => state.voting.proposalLoadingStatus)\n  return votingStatus\n}\n","import React from 'react'\nimport { TagProps } from '@pancakeswap/uikit'\nimport { ClosedTag, CommunityTag, CoreTag, SoonTag, VoteNowTag } from 'components/Tags'\nimport { ProposalState } from 'state/types'\n\ninterface ProposalStateTagProps extends TagProps {\n  proposalState: ProposalState\n}\n\nexport const ProposalStateTag: React.FC<ProposalStateTagProps> = ({ proposalState, ...props }) => {\n  if (proposalState === ProposalState.ACTIVE) {\n    return <VoteNowTag {...props} />\n  }\n\n  if (proposalState === ProposalState.PENDING) {\n    return <SoonTag {...props} />\n  }\n\n  return <ClosedTag {...props} />\n}\n\ninterface ProposalTypeTagProps extends TagProps {\n  isCoreProposal: boolean\n}\n\nexport const ProposalTypeTag: React.FC<ProposalTypeTagProps> = ({ isCoreProposal, ...props }) => {\n  if (isCoreProposal) {\n    return <CoreTag {...props} />\n  }\n\n  return <CommunityTag {...props} />\n}\n"],"sourceRoot":""}