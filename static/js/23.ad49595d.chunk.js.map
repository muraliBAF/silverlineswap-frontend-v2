{"version":3,"sources":["components/ReactMarkdown/styles.tsx","components/ReactMarkdown/index.tsx","views/Voting/components/DatePicker/DatePicker.tsx","views/Voting/components/DatePicker/DatePickerPortal.tsx","views/Voting/components/DatePicker/TimePicker.tsx","views/Voting/CreateProposal/styles.tsx","views/Voting/CreateProposal/Choice.tsx","views/Voting/CreateProposal/Choices.tsx","views/Voting/CreateProposal/helpers.ts","views/Voting/components/VoteDetailsModal.tsx","views/Voting/CreateProposal/index.tsx","views/Voting/helpers.ts","views/Voting/config.ts","views/Voting/components/CastVoteModal/styles.tsx","views/Voting/components/Layout.tsx","views/Voting/components/CastVoteModal/DetailsView.tsx","views/Voting/hooks/useGetVotingPower.tsx"],"names":["Table","styled","table","theme","colors","text","TableBox","div","ThemedComponent","Title","props","as","scale","my","markdownComponents","h1","h2","h3","h4","h5","h6","p","children","ol","ul","pre","a","ReactMarkdown","remarkPlugins","gfm","components","DatePicker","inputProps","customInput","portalId","dateFormat","StyledDatePickerPortal","card","background","cardBorder","input","primary","primaryBright","secondary","DatePickerPortal","id","TimePicker","t","useTranslation","showTimeSelect","showTimeSelectOnly","timeIntervals","timeCaption","BaseLabel","label","Label","SecondaryLabel","FormError","color","mb","FormErrors","errors","mt","map","error","Choice","onRemove","onTextInput","useState","isWarning","setIsWarning","isDirty","setIsDirty","position","onChange","evt","value","currentTarget","length","right","top","zIndex","variant","onClick","makeChoice","uniqueId","Choices","choices","hasMinimumChoices","filter","choice","index","newValue","newChoices","choiceIndex","findIndex","newChoice","placeholder","newPrevChoice","undefined","type","disabled","combineDateAndTime","date","time","isValid","dateStr","format","timeStr","parseISO","getTime","VoteDetailsModal","block","onDismiss","modalIsOpen","setModalIsOpen","useGetVotingPower","isLoading","total","cakeBalance","cakeVaultBalance","cakePoolBalance","poolsBalance","cakeBnbLpBalance","ifoPoolBalance","useTheme","title","headerBackground","gradients","cardHeader","width","height","alignItems","justifyContent","size","DetailsView","EasyMde","lazy","CreateProposal","name","body","times","startDate","startTime","endDate","endTime","snapshot","state","setState","setIsLoading","fieldsState","setFieldsState","account","useWeb3React","initialBlock","useInitialBlock","push","useHistory","useWeb3Provider","library","connector","useToast","toastSuccess","toastError","useModal","onPresentVoteDetailsModal","formErrors","formData","field","num","hasEmptyChoice","some","Array","isArray","startDateTimestamp","getFormErrors","handleSubmit","preventDefault","proposal","JSON","stringify","generatePayloadData","SnapshotCommand","PROPOSAL","payload","start","end","metadata","generateMetaData","signMessage","sig","msg","address","sendSnapshotData","data","ipfsHash","message","console","updateValue","key","prevState","prevFieldsState","handleDateChange","options","useMemo","hideIcons","ADMINS","includes","toLowerCase","useEffect","Container","py","Page","to","onSubmit","Layout","htmlFor","inputName","required","onTextChange","px","selected","placeholderText","mr","href","getBscScanLink","truncateHash","endIcon","spin","isEmpty","count","VOTE_THRESHOLD","ConnectWalletButton","isCoreProposal","author","filterProposalsByType","proposals","proposalType","ProposalType","COMMUNITY","CORE","ALL","filterProposalsByState","plugins","network","strategies","params","symbol","tokens","cake","decimals","version","SNAPSHOT_VERSION","timestamp","Date","now","toFixed","space","PANCAKE_SPACE","fetch","SNAPSHOT_HUB_API","method","headers","Accept","response","ok","json","Error","error_description","getVotingPower","poolAddresses","simpleRpcProvider","getBlockNumber","blockNumber","SNAPSHOT_VOTING_API","calculateVoteResults","votes","reduce","accum","vote","choiceText","getTotalFromVotes","power","parseFloat","votingPower","PROPOSALS_TO_SHOW","IPFS_GATEWAY","VotingBox","ModalInner","maxWidth","mediaQueries","lg","fontSize","textTransform","bold","formatNumber","textAlign","initialState","verificationHash","isActive","setVotingPower","getActivePools","eligiblePools","contractAddress","getAddress","IFOPoolBalance","prevVotingPower","fetchVotingPower"],"mappings":"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","file":"static/js/23.ad49595d.chunk.js","sourcesContent":["import React from 'react'\nimport { Heading, Text } from '@pancakeswap/uikit'\nimport { NormalComponents, SpecialComponents } from 'react-markdown/src/ast-to-react'\nimport styled from 'styled-components'\n\nconst Table = styled.table`\n  margin-bottom: 32px;\n  margin-top: 32px;\n  width: 100%;\n\n  td,\n  th {\n    color: ${({ theme }) => theme.colors.text};\n    padding: 8px;\n  }\n`\nconst TableBox = styled.div`\n  width: 100%;\n  overflow: auto;\n  -webkit-overflow-scrolling: touch;\n`\n\nconst ThemedComponent = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  margin-bottom: 16px;\n  margin-top: 16px;\n\n  li {\n    margin-bottom: 8px;\n  }\n`\n\nconst Pre = styled.pre`\n  color: ${({ theme }) => theme.colors.text};\n  margin-bottom: 16px;\n  margin-top: 16px;\n  max-width: 100%;\n  overflow-x: auto;\n`\n\nconst AStyle = styled.a`\n  word-break: break-all;\n`\n\nconst Title = (props) => {\n  return <Heading as=\"h4\" scale=\"lg\" my=\"16px\" {...props} />\n}\n\nconst markdownComponents: Partial<NormalComponents & SpecialComponents> = {\n  h1: Title,\n  h2: Title,\n  h3: Title,\n  h4: Title,\n  h5: Title,\n  h6: Title,\n  p: (props) => {\n    return <Text as=\"p\" my=\"16px\" {...props} />\n  },\n  table: ({ ...props }) => {\n    return (\n      <TableBox>\n        <Table>{props.children}</Table>\n      </TableBox>\n    )\n  },\n  ol: (props) => {\n    return <ThemedComponent as=\"ol\" {...props} />\n  },\n  ul: (props) => {\n    return <ThemedComponent as=\"ul\" {...props} />\n  },\n  pre: Pre,\n  a: AStyle,\n}\n\nexport default markdownComponents\n","import React from 'react'\nimport ReactMarkdownLib, { ReactMarkdownOptions } from 'react-markdown'\nimport gfm from 'remark-gfm'\nimport markdownComponents from './styles'\n\nconst ReactMarkdown: React.FC<ReactMarkdownOptions> = (props) => {\n  return <ReactMarkdownLib remarkPlugins={[gfm]} components={markdownComponents} {...props} />\n}\n\nexport default ReactMarkdown\n","import React from 'react'\nimport ReactDatePicker, { ReactDatePickerProps } from 'react-datepicker'\nimport { Input, InputProps } from '@pancakeswap/uikit'\n\nimport 'react-datepicker/dist/react-datepicker.css'\n\nexport interface DatePickerProps extends ReactDatePickerProps {\n  inputProps?: InputProps\n}\n\nconst DatePicker: React.FC<DatePickerProps> = ({ inputProps = {}, ...props }) => {\n  return (\n    <ReactDatePicker customInput={<Input {...inputProps} />} portalId=\"reactDatePicker\" dateFormat=\"PPP\" {...props} />\n  )\n}\n\nexport default DatePicker\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledDatePickerPortal = styled.div`\n  .react-datepicker-wrapper,\n  .react-datepicker__input-container {\n    display: block;\n  }\n\n  .react-datepicker {\n    background: ${({ theme }) => theme.card.background};\n    border-color: ${({ theme }) => theme.colors.cardBorder};\n    color: ${({ theme }) => theme.colors.text};\n    font-family: 'Kanit', sans-serif;\n  }\n\n  .react-datepicker__header {\n    background: ${({ theme }) => theme.colors.input};\n    border-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker__current-month,\n  .react-datepicker-time__header,\n  .react-datepicker-year-header,\n  .react-datepicker__day-name,\n  .react-datepicker__day,\n  .react-datepicker__time-name {\n    color: ${({ theme }) => theme.colors.text};\n  }\n\n  .react-datepicker__day:hover,\n  .react-datepicker__month-text:hover,\n  .react-datepicker__quarter-text:hover,\n  .react-datepicker__year-text:hover {\n    background-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::before,\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::after {\n    border-bottom-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker__day--selected,\n  .react-datepicker__day--in-selecting-range,\n  .react-datepicker__day--in-range,\n  .react-datepicker__month-text--selected,\n  .react-datepicker__month-text--in-selecting-range,\n  .react-datepicker__month-text--in-range,\n  .react-datepicker__quarter-text--selected,\n  .react-datepicker__quarter-text--in-selecting-range,\n  .react-datepicker__quarter-text--in-range,\n  .react-datepicker__year-text--selected,\n  .react-datepicker__year-text--in-selecting-range,\n  .react-datepicker__year-text--in-range {\n    background-color: ${({ theme }) => theme.colors.primary};\n  }\n\n  .react-datepicker__day--selected:hover,\n  .react-datepicker__day--in-selecting-range:hover,\n  .react-datepicker__day--in-range:hover,\n  .react-datepicker__month-text--selected:hover,\n  .react-datepicker__month-text--in-selecting-range:hover,\n  .react-datepicker__month-text--in-range:hover,\n  .react-datepicker__quarter-text--selected:hover,\n  .react-datepicker__quarter-text--in-selecting-range:hover,\n  .react-datepicker__quarter-text--in-range:hover,\n  .react-datepicker__year-text--selected:hover,\n  .react-datepicker__year-text--in-selecting-range:hover,\n  .react-datepicker__year-text--in-range:hover {\n    background-color: ${({ theme }) => theme.colors.primaryBright};\n  }\n\n  .react-datepicker__day--keyboard-selected,\n  .react-datepicker__month-text--keyboard-selected,\n  .react-datepicker__quarter-text--keyboard-selected,\n  .react-datepicker__year-text--keyboard-selected {\n    background-color: ${({ theme }) => theme.colors.secondary};\n    color: #ffffff;\n  }\n\n  .react-datepicker__day--keyboard-selected:hover,\n  .react-datepicker__month-text--keyboard-selected:hover,\n  .react-datepicker__quarter-text--keyboard-selected:hover,\n  .react-datepicker__year-text--keyboard-selected:hover {\n    background-color: ${({ theme }) => theme.colors.secondary};\n    color: #ffffff;\n  }\n\n  .react-datepicker__time-container,\n  .react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box {\n    width: 120px;\n  }\n\n  .react-datepicker__header--time {\n    padding: 8px;\n  }\n\n  .react-datepicker__time-container\n    .react-datepicker__time\n    .react-datepicker__time-box\n    ul.react-datepicker__time-list\n    li.react-datepicker__time-list-item {\n    height: auto;\n    padding: 8px;\n  }\n`\n\nconst DatePickerPortal = () => {\n  return <StyledDatePickerPortal id=\"reactDatePicker\" />\n}\n\nexport default DatePickerPortal\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport DatePicker, { DatePickerProps } from './DatePicker'\n\nconst TimePicker: React.FC<DatePickerProps> = (props) => {\n  const { t } = useTranslation()\n\n  return (\n    <DatePicker\n      showTimeSelect\n      showTimeSelectOnly\n      timeIntervals={15}\n      timeCaption={t('Time')}\n      dateFormat=\"ppp\"\n      {...props}\n    />\n  )\n}\n\nexport default TimePicker\n","import React from 'react'\nimport { Box, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nconst BaseLabel = styled.label`\n  color: ${({ theme }) => theme.colors.text};\n  display: block;\n  font-weight: 600;\n  margin-bottom: 8px;\n`\n\nexport const Label = styled(BaseLabel)`\n  font-size: 20px;\n`\n\nexport const SecondaryLabel = styled(BaseLabel)`\n  font-size: 12px;\n  text-transform: uppercase;\n`\n\nexport const FormError: React.FC = ({ children }) => (\n  <Text color=\"failure\" mb=\"4px\">\n    {children}\n  </Text>\n)\n\nexport const FormErrors: React.FC<{ errors: string[] }> = ({ errors }) => {\n  return (\n    <Box mt=\"8px\">\n      {errors.map((error) => {\n        return <FormError key={error}>{error}</FormError>\n      })}\n    </Box>\n  )\n}\n","import React, { ChangeEvent, InputHTMLAttributes, useState } from 'react'\nimport { Box, CloseIcon, IconButton, Input, InputProps } from '@pancakeswap/uikit'\n\ninterface ChoiceProps extends InputProps, InputHTMLAttributes<HTMLInputElement> {\n  onTextInput: (value: string) => void\n  onRemove?: () => void\n}\n\nconst Choice: React.FC<ChoiceProps> = ({ onRemove, onTextInput, ...props }) => {\n  const [isWarning, setIsWarning] = useState(false)\n  const [isDirty, setIsDirty] = useState(false)\n\n  const handleChange = (evt: ChangeEvent<HTMLInputElement>) => {\n    const { value } = evt.currentTarget\n\n    setIsWarning(isDirty && value.length === 0)\n    setIsDirty(true)\n    onTextInput(value)\n  }\n\n  return (\n    <Box position=\"relative\" mb=\"16px\">\n      <Input {...props} onChange={handleChange} isWarning={isWarning} />\n      {onRemove && (\n        <Box position=\"absolute\" right=\"8px\" top=\"0px\" zIndex={30}>\n          <IconButton variant=\"text\" onClick={onRemove}>\n            <CloseIcon />\n          </IconButton>\n        </Box>\n      )}\n    </Box>\n  )\n}\n\nexport default Choice\n","import React from 'react'\nimport { Button, Card, CardBody, CardHeader, Heading } from '@pancakeswap/uikit'\nimport uniqueId from 'lodash/uniqueId'\nimport { useTranslation } from 'contexts/Localization'\nimport Choice from './Choice'\n\nexport interface Choice {\n  id: string\n  value: string\n}\n\ninterface ChoicesProps {\n  choices: Choice[]\n  onChange: (newChoices: Choice[]) => void\n}\n\nexport const MINIMUM_CHOICES = 2\nexport const makeChoice = (): Choice => ({ id: uniqueId(), value: '' })\n\nconst Choices: React.FC<ChoicesProps> = ({ choices, onChange }) => {\n  const { t } = useTranslation()\n  const hasMinimumChoices = choices.filter((choice) => choice.value.length > 0).length >= MINIMUM_CHOICES\n\n  const addChoice = () => {\n    onChange([...choices, makeChoice()])\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <Heading as=\"h3\" scale=\"md\">\n          {t('Choices')}\n        </Heading>\n      </CardHeader>\n      <CardBody>\n        {choices.map(({ id, value }, index) => {\n          const handleTextInput = (newValue: string) => {\n            const newChoices = [...choices]\n            const choiceIndex = newChoices.findIndex((newChoice) => newChoice.id === id)\n\n            newChoices[choiceIndex].value = newValue\n\n            onChange(newChoices)\n          }\n\n          const handleRemove = () => {\n            onChange(choices.filter((newPrevChoice) => newPrevChoice.id !== id))\n          }\n\n          return (\n            <Choice\n              key={id}\n              scale=\"lg\"\n              onTextInput={handleTextInput}\n              placeholder={t('Input choice text')}\n              value={value}\n              onRemove={index > 1 ? handleRemove : undefined}\n            />\n          )\n        })}\n\n        <Button type=\"button\" onClick={addChoice} disabled={!hasMinimumChoices}>\n          {t('Add Choice')}\n        </Button>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default Choices\n","import { ContextApi } from 'contexts/Localization/types'\nimport { format, parseISO, isValid } from 'date-fns'\nimport { MINIMUM_CHOICES } from './Choices'\nimport { FormState } from './types'\n\nexport const combineDateAndTime = (date: Date, time: Date) => {\n  if (!isValid(date) || !isValid(time)) {\n    return null\n  }\n\n  const dateStr = format(date, 'yyyy-MM-dd')\n  const timeStr = format(time, 'HH:mm:ss')\n\n  return parseISO(`${dateStr}T${timeStr}`).getTime() / 1e3\n}\n\nexport const getFormErrors = (formData: FormState, t: ContextApi['t']) => {\n  const { name, body, choices, startDate, startTime, endDate, endTime, snapshot } = formData\n  const errors: { [key: string]: string[] } = {}\n\n  if (!name) {\n    errors.name = [t('%field% is required', { field: 'Title' })]\n  }\n\n  if (!body) {\n    errors.body = [t('%field% is required', { field: 'Body' })]\n  }\n\n  if (choices.length < MINIMUM_CHOICES) {\n    errors.choices = [t('Please create a minimum of %num% choices', { num: MINIMUM_CHOICES })]\n  }\n\n  const hasEmptyChoice = choices.some((choice) => !choice.value)\n  if (choices.length === MINIMUM_CHOICES && hasEmptyChoice) {\n    errors.choices = Array.isArray(errors.choices)\n      ? [...errors.choices, t('Choices must not be empty')]\n      : (errors.choices = [t('Choices must not be empty')])\n  }\n\n  if (!isValid(startDate)) {\n    errors.startDate = [t('Please select a valid date')]\n  }\n\n  if (!isValid(startTime)) {\n    errors.startTime = [t('Please select a valid time')]\n  }\n\n  if (!isValid(endDate)) {\n    errors.endDate = [t('Please select a valid date')]\n  }\n\n  if (!isValid(endTime)) {\n    errors.endTime = [t('Please select a valid time')]\n  }\n\n  const startDateTimestamp = combineDateAndTime(startDate, startTime)\n  const endDateTimestamp = combineDateAndTime(endDate, endTime)\n\n  if (endDateTimestamp < startDateTimestamp) {\n    errors.endDate = Array.isArray(errors.endDate)\n      ? [...errors.endDate, t('End date must be after the start date')]\n      : (errors.endDate = [t('End date must be after the start date')])\n  }\n\n  if (snapshot === 0) {\n    errors.snapshot = [t('Invalid snapshot')]\n  }\n\n  return errors\n}\n","import React, { useState } from 'react'\nimport { Box, Flex, InjectedModalProps, Modal, Button, Spinner } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useGetVotingPower from '../hooks/useGetVotingPower'\nimport DetailsView from './CastVoteModal/DetailsView'\n\ninterface VoteDetailsModalProps extends InjectedModalProps {\n  block: number\n}\n\nconst VoteDetailsModal: React.FC<VoteDetailsModalProps> = ({ block, onDismiss }) => {\n  const { t } = useTranslation()\n  const [modalIsOpen, setModalIsOpen] = useState(true)\n  const {\n    isLoading,\n    total,\n    cakeBalance,\n    cakeVaultBalance,\n    cakePoolBalance,\n    poolsBalance,\n    cakeBnbLpBalance,\n    ifoPoolBalance,\n  } = useGetVotingPower(block, modalIsOpen)\n  const { theme } = useTheme()\n\n  const handleDismiss = () => {\n    setModalIsOpen(false)\n    onDismiss()\n  }\n\n  return (\n    <Modal title={t('Voting Power')} onDismiss={handleDismiss} headerBackground={theme.colors.gradients.cardHeader}>\n      <Box mb=\"24px\" width=\"320px\">\n        {isLoading ? (\n          <Flex height=\"450px\" alignItems=\"center\" justifyContent=\"center\">\n            <Spinner size={80} />\n          </Flex>\n        ) : (\n          <>\n            <DetailsView\n              total={total}\n              cakeBalance={cakeBalance}\n              cakeVaultBalance={cakeVaultBalance}\n              cakePoolBalance={cakePoolBalance}\n              poolsBalance={poolsBalance}\n              ifoPoolBalance={ifoPoolBalance}\n              cakeBnbLpBalance={cakeBnbLpBalance}\n            />\n            <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\" mt=\"16px\">\n              {t('Close')}\n            </Button>\n          </>\n        )}\n      </Box>\n    </Modal>\n  )\n}\n\nexport default VoteDetailsModal\n","import React, { ChangeEvent, FormEvent, lazy, useEffect, useState, useMemo } from 'react'\nimport {\n  AutoRenewIcon,\n  Box,\n  Breadcrumbs,\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  Flex,\n  Heading,\n  Input,\n  LinkExternal,\n  Text,\n  useModal,\n} from '@pancakeswap/uikit'\nimport { useHistory } from 'react-router'\nimport { Link } from 'react-router-dom'\nimport { useWeb3React } from '@web3-react/core'\nimport times from 'lodash/times'\nimport isEmpty from 'lodash/isEmpty'\nimport { useInitialBlock } from 'state/block/hooks'\nimport { SnapshotCommand } from 'state/types'\nimport useToast from 'hooks/useToast'\nimport useWeb3Provider from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport truncateHash from 'utils/truncateHash'\nimport { signMessage } from 'utils/web3React'\nimport { useTranslation } from 'contexts/Localization'\nimport Container from 'components/Layout/Container'\nimport { DatePicker, TimePicker, DatePickerPortal } from 'views/Voting/components/DatePicker'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport ReactMarkdown from 'components/ReactMarkdown'\nimport { PageMeta } from 'components/Layout/Page'\nimport { sendSnapshotData, Message, generateMetaData, generatePayloadData } from '../helpers'\nimport Layout from '../components/Layout'\nimport { FormErrors, Label, SecondaryLabel } from './styles'\nimport Choices, { Choice, makeChoice, MINIMUM_CHOICES } from './Choices'\nimport { combineDateAndTime, getFormErrors } from './helpers'\nimport { FormState } from './types'\nimport { ADMINS, VOTE_THRESHOLD } from '../config'\nimport VoteDetailsModal from '../components/VoteDetailsModal'\n\nconst EasyMde = lazy(() => import('components/EasyMde'))\n\nconst CreateProposal = () => {\n  const [state, setState] = useState<FormState>({\n    name: '',\n    body: '',\n    choices: times(MINIMUM_CHOICES).map(makeChoice),\n    startDate: null,\n    startTime: null,\n    endDate: null,\n    endTime: null,\n    snapshot: 0,\n  })\n  const [isLoading, setIsLoading] = useState(false)\n  const [fieldsState, setFieldsState] = useState<{ [key: string]: boolean }>({})\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const initialBlock = useInitialBlock()\n  const { push } = useHistory()\n  const { library, connector } = useWeb3Provider()\n  const { toastSuccess, toastError } = useToast()\n  const [onPresentVoteDetailsModal] = useModal(<VoteDetailsModal block={state.snapshot} />)\n  const { name, body, choices, startDate, startTime, endDate, endTime, snapshot } = state\n  const formErrors = getFormErrors(state, t)\n\n  const handleSubmit = async (evt: FormEvent<HTMLFormElement>) => {\n    evt.preventDefault()\n\n    try {\n      setIsLoading(true)\n      const proposal = JSON.stringify({\n        ...generatePayloadData(),\n        type: SnapshotCommand.PROPOSAL,\n        payload: {\n          name,\n          body,\n          snapshot,\n          start: combineDateAndTime(startDate, startTime),\n          end: combineDateAndTime(endDate, endTime),\n          choices: choices\n            .filter((choice) => choice.value)\n            .map((choice) => {\n              return choice.value\n            }),\n          metadata: generateMetaData(),\n          type: 'single-choice',\n        },\n      })\n\n      const sig = await signMessage(connector, library, account, proposal)\n\n      if (sig) {\n        const msg: Message = { address: account, msg: proposal, sig }\n\n        // Save proposal to snapshot\n        const data = await sendSnapshotData(msg)\n\n        // Redirect user to newly created proposal page\n        push(`/voting/proposal/${data.ipfsHash}`)\n\n        toastSuccess(t('Proposal created!'))\n      } else {\n        toastError(t('Error'), t('Unable to sign payload'))\n      }\n    } catch (error) {\n      toastError(t('Error'), (error as Error)?.message)\n      console.error(error)\n      setIsLoading(false)\n    }\n  }\n\n  const updateValue = (key: string, value: string | Choice[] | Date) => {\n    setState((prevState) => ({\n      ...prevState,\n      [key]: value,\n    }))\n\n    // Keep track of what fields the user has attempted to edit\n    setFieldsState((prevFieldsState) => ({\n      ...prevFieldsState,\n      [key]: true,\n    }))\n  }\n\n  const handleChange = (evt: ChangeEvent<HTMLInputElement>) => {\n    const { name: inputName, value } = evt.currentTarget\n    updateValue(inputName, value)\n  }\n\n  const handleEasyMdeChange = (value: string) => {\n    updateValue('body', value)\n  }\n\n  const handleChoiceChange = (newChoices: Choice[]) => {\n    updateValue('choices', newChoices)\n  }\n\n  const handleDateChange = (key: string) => (value: Date) => {\n    updateValue(key, value)\n  }\n\n  const options = useMemo(() => {\n    return {\n      hideIcons:\n        account && ADMINS.includes(account.toLowerCase())\n          ? []\n          : ['guide', 'fullscreen', 'preview', 'side-by-side', 'image'],\n    }\n  }, [account])\n\n  useEffect(() => {\n    if (initialBlock > 0) {\n      setState((prevState) => ({\n        ...prevState,\n        snapshot: initialBlock,\n      }))\n    }\n  }, [initialBlock, setState])\n\n  return (\n    <Container py=\"40px\">\n      <PageMeta />\n      <Box mb=\"48px\">\n        <Breadcrumbs>\n          <Link to=\"/\">{t('Home')}</Link>\n          <Link to=\"/voting\">{t('Voting')}</Link>\n          <Text>{t('Make a Proposal')}</Text>\n        </Breadcrumbs>\n      </Box>\n      <form onSubmit={handleSubmit}>\n        <Layout>\n          <Box>\n            <Box mb=\"24px\">\n              <Label htmlFor=\"name\">{t('Title')}</Label>\n              <Input id=\"name\" name=\"name\" value={name} scale=\"lg\" onChange={handleChange} required />\n              {formErrors.name && fieldsState.name && <FormErrors errors={formErrors.name} />}\n            </Box>\n            <Box mb=\"24px\">\n              <Label htmlFor=\"body\">{t('Content')}</Label>\n              <Text color=\"textSubtle\" mb=\"8px\">\n                {t('Tip: write in Markdown!')}\n              </Text>\n              <EasyMde\n                id=\"body\"\n                name=\"body\"\n                onTextChange={handleEasyMdeChange}\n                value={body}\n                options={options}\n                required\n              />\n              {formErrors.body && fieldsState.body && <FormErrors errors={formErrors.body} />}\n            </Box>\n            {body && (\n              <Box mb=\"24px\">\n                <Card>\n                  <CardHeader>\n                    <Heading as=\"h3\" scale=\"md\">\n                      {t('Preview')}\n                    </Heading>\n                  </CardHeader>\n                  <CardBody p=\"0\" px=\"24px\">\n                    <ReactMarkdown>{body}</ReactMarkdown>\n                  </CardBody>\n                </Card>\n              </Box>\n            )}\n            <Choices choices={choices} onChange={handleChoiceChange} />\n            {formErrors.choices && fieldsState.choices && <FormErrors errors={formErrors.choices} />}\n          </Box>\n          <Box>\n            <Card>\n              <CardHeader>\n                <Heading as=\"h3\" scale=\"md\">\n                  {t('Actions')}\n                </Heading>\n              </CardHeader>\n              <CardBody>\n                <Box mb=\"24px\">\n                  <SecondaryLabel>{t('Start Date')}</SecondaryLabel>\n                  <DatePicker\n                    name=\"startDate\"\n                    onChange={handleDateChange('startDate')}\n                    selected={startDate}\n                    placeholderText=\"YYYY/MM/DD\"\n                  />\n                  {formErrors.startDate && fieldsState.startDate && <FormErrors errors={formErrors.startDate} />}\n                </Box>\n                <Box mb=\"24px\">\n                  <SecondaryLabel>{t('Start Time')}</SecondaryLabel>\n                  <TimePicker\n                    name=\"startTime\"\n                    onChange={handleDateChange('startTime')}\n                    selected={startTime}\n                    placeholderText=\"00:00\"\n                  />\n                  {formErrors.startTime && fieldsState.startTime && <FormErrors errors={formErrors.startTime} />}\n                </Box>\n                <Box mb=\"24px\">\n                  <SecondaryLabel>{t('End Date')}</SecondaryLabel>\n                  <DatePicker\n                    name=\"endDate\"\n                    onChange={handleDateChange('endDate')}\n                    selected={endDate}\n                    placeholderText=\"YYYY/MM/DD\"\n                  />\n                  {formErrors.endDate && fieldsState.endDate && <FormErrors errors={formErrors.endDate} />}\n                </Box>\n                <Box mb=\"24px\">\n                  <SecondaryLabel>{t('End Time')}</SecondaryLabel>\n                  <TimePicker\n                    name=\"endTime\"\n                    onChange={handleDateChange('endTime')}\n                    selected={endTime}\n                    placeholderText=\"00:00\"\n                  />\n                  {formErrors.endTime && fieldsState.endTime && <FormErrors errors={formErrors.endTime} />}\n                </Box>\n                {account && (\n                  <Flex alignItems=\"center\" mb=\"8px\">\n                    <Text color=\"textSubtle\" mr=\"16px\">\n                      {t('Creator')}\n                    </Text>\n                    <LinkExternal href={getBscScanLink(account, 'address')}>{truncateHash(account)}</LinkExternal>\n                  </Flex>\n                )}\n                <Flex alignItems=\"center\" mb=\"16px\">\n                  <Text color=\"textSubtle\" mr=\"16px\">\n                    {t('Snapshot')}\n                  </Text>\n                  <LinkExternal href={getBscScanLink(snapshot, 'block')}>{snapshot}</LinkExternal>\n                </Flex>\n                {account ? (\n                  <>\n                    <Button\n                      type=\"submit\"\n                      width=\"100%\"\n                      isLoading={isLoading}\n                      endIcon={isLoading ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n                      disabled={!isEmpty(formErrors)}\n                      mb=\"16px\"\n                    >\n                      {t('Publish')}\n                    </Button>\n                    <Text color=\"failure\" as=\"p\" mb=\"4px\">\n                      {t('You need at least %count% voting power to publish a proposal.', { count: VOTE_THRESHOLD })}{' '}\n                    </Text>\n                    <Button scale=\"sm\" type=\"button\" variant=\"text\" onClick={onPresentVoteDetailsModal} p={0}>\n                      {t('Check voting power')}\n                    </Button>\n                  </>\n                ) : (\n                  <ConnectWalletButton width=\"100%\" type=\"button\" />\n                )}\n              </CardBody>\n            </Card>\n          </Box>\n        </Layout>\n      </form>\n      <DatePickerPortal />\n    </Container>\n  )\n}\n\nexport default CreateProposal\n","import { SNAPSHOT_HUB_API, SNAPSHOT_VOTING_API } from 'config/constants/endpoints'\nimport tokens from 'config/constants/tokens'\nimport { Proposal, ProposalState, ProposalType, Vote } from 'state/types'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { ADMINS, PANCAKE_SPACE, SNAPSHOT_VERSION } from './config'\n\nexport const isCoreProposal = (proposal: Proposal) => {\n  return ADMINS.includes(proposal.author.toLowerCase())\n}\n\nexport const filterProposalsByType = (proposals: Proposal[], proposalType: ProposalType) => {\n  switch (proposalType) {\n    case ProposalType.COMMUNITY:\n      return proposals.filter((proposal) => !isCoreProposal(proposal))\n    case ProposalType.CORE:\n      return proposals.filter((proposal) => isCoreProposal(proposal))\n    case ProposalType.ALL:\n    default:\n      return proposals\n  }\n}\n\nexport const filterProposalsByState = (proposals: Proposal[], state: ProposalState) => {\n  return proposals.filter((proposal) => proposal.state === state)\n}\n\nexport interface Message {\n  address: string\n  msg: string\n  sig: string\n}\n\n/**\n * Generates metadata required by snapshot to validate payload\n */\nexport const generateMetaData = () => {\n  return {\n    plugins: {},\n    network: 56,\n    strategies: [{ name: 'cake', params: { symbol: 'SLCT', address: tokens.cake.address, decimals: 18 } }],\n  }\n}\n\n/**\n * Returns data that is required on all snapshot payloads\n */\nexport const generatePayloadData = () => {\n  return {\n    version: SNAPSHOT_VERSION,\n    timestamp: (Date.now() / 1e3).toFixed(),\n    space: PANCAKE_SPACE,\n  }\n}\n\n/**\n * General function to send commands to the snapshot api\n */\nexport const sendSnapshotData = async (message: Message) => {\n  const response = await fetch(SNAPSHOT_HUB_API, {\n    method: 'post',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(message),\n  })\n\n  if (!response.ok) {\n    const error = await response.json()\n    throw new Error(error?.error_description)\n  }\n\n  const data = await response.json()\n  return data\n}\n\nexport const getVotingPower = async (account: string, poolAddresses: string[], block?: number) => {\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n  const response = await fetch(`${SNAPSHOT_VOTING_API}/power`, {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      address: account,\n      block: blockNumber,\n      poolAddresses,\n    }),\n  })\n  const data = await response.json()\n  return data.data\n}\n\nexport const calculateVoteResults = (votes: Vote[]): { [key: string]: Vote[] } => {\n  return votes.reduce((accum, vote) => {\n    const choiceText = vote.proposal.choices[vote.choice - 1]\n\n    return {\n      ...accum,\n      [choiceText]: accum[choiceText] ? [...accum[choiceText], vote] : [vote],\n    }\n  }, {})\n}\n\nexport const getTotalFromVotes = (votes: Vote[]) => {\n  return votes.reduce((accum, vote) => {\n    let power = parseFloat(vote.metadata?.votingPower)\n\n    if (!power) {\n      power = 0\n    }\n\n    return accum + power\n  }, 0)\n}\n","export const PROPOSALS_TO_SHOW = 10\nexport const ADMINS = [\n  '0x842B508681eE336E74600974B4623B709477d29D', // TARO\n  '0x977e0c1005dff8749f8cac22f4df0bd5f013d1a7', // CHUNGUS\n  '0x6eaf1b33b8672c5dc40ab8f4ba3a0111723126c7', // HOPS\n].map((address) => address.toLowerCase())\nexport const IPFS_GATEWAY = 'https://gateway.ipfs.io/ipfs'\nexport const SNAPSHOT_VERSION = '0.1.3'\nexport const PANCAKE_SPACE = 'cake.eth'\nexport const VOTE_THRESHOLD = 10\n","import React from 'react'\nimport { Box, BoxProps } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nexport const VotingBox = styled.div`\n  align-items: center;\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  border-radius: 12px;\n  display: flex;\n  height: 64px;\n  justify-content: space-between;\n  margin-bottom: 24px;\n  padding: 0 16px;\n`\n\nexport const ModalInner: React.FC<BoxProps> = (props) => {\n  return <Box mb=\"24px\" maxWidth=\"320px\" {...props} />\n}\n","import styled from 'styled-components'\n\nconst Layout = styled.div`\n  align-items: start;\n  display: grid;\n  grid-gap: 32px;\n  grid-template-columns: minmax(0, 1fr);\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    grid-template-columns: 1fr 332px;\n  }\n`\n\nexport default Layout\n","import React from 'react'\nimport { Text, Flex } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { formatNumber } from 'utils/formatBalance'\nimport { VotingBox, ModalInner } from './styles'\n\ninterface DetailsViewProps {\n  total: number\n  cakeBalance: number\n  cakeVaultBalance: number\n  cakePoolBalance: number\n  poolsBalance: number\n  cakeBnbLpBalance: number\n  ifoPoolBalance: number\n}\n\nconst DetailsView: React.FC<DetailsViewProps> = ({\n  total,\n  cakeBalance,\n  cakeVaultBalance,\n  cakePoolBalance,\n  poolsBalance,\n  cakeBnbLpBalance,\n  ifoPoolBalance,\n}) => {\n  const { t } = useTranslation()\n\n  return (\n    <ModalInner mb=\"0\">\n      <Text as=\"p\" mb=\"24px\" fontSize=\"14px\" color=\"textSubtle\">\n        {t(\n          'Your voting power is determined by the amount of SLCT you held at the block detailed below. SLCT held in other places does not contribute to your voting power.',\n        )}\n      </Text>\n      <Text color=\"secondary\" textTransform=\"uppercase\" mb=\"4px\" bold fontSize=\"14px\">\n        {t('Overview')}\n      </Text>\n      <VotingBox>\n        <Text color=\"secondary\">{t('Your Voting Power')}</Text>\n        <Text bold fontSize=\"20px\">\n          {formatNumber(total, 0, 3)}\n        </Text>\n      </VotingBox>\n      <Text color=\"secondary\" textTransform=\"uppercase\" mb=\"4px\" bold fontSize=\"14px\">\n        {t('Your Cake Held Now')}\n      </Text>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\n        <Text color=\"textSubtle\" fontSize=\"16px\">\n          {t('Wallet')}\n        </Text>\n        <Text textAlign=\"right\">{formatNumber(cakeBalance, 0, 3)}</Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\n        <Text color=\"textSubtle\" fontSize=\"16px\">\n          {t('Manual SLCT Pool')}\n        </Text>\n        <Text textAlign=\"right\">{formatNumber(cakePoolBalance, 0, 3)}</Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\n        <Text color=\"textSubtle\" fontSize=\"16px\">\n          {t('Auto SLCT Pool')}\n        </Text>\n        <Text textAlign=\"right\">{formatNumber(cakeVaultBalance, 0, 3)}</Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\n        <Text color=\"textSubtle\" fontSize=\"16px\">\n          {t('IFO Pool')}\n        </Text>\n        <Text textAlign=\"right\">{formatNumber(ifoPoolBalance, 0, 3)}</Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\n        <Text color=\"textSubtle\" fontSize=\"16px\">\n          {t('Other Syrup Pools')}\n        </Text>\n        <Text textAlign=\"right\">{formatNumber(poolsBalance, 0, 3)}</Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\n        <Text color=\"textSubtle\" fontSize=\"16px\">\n          {t('SLCT BNB LP')}\n        </Text>\n        <Text textAlign=\"right\">{formatNumber(cakeBnbLpBalance, 0, 3)}</Text>\n      </Flex>\n    </ModalInner>\n  )\n}\n\nexport default DetailsView\n","import { useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { getActivePools } from 'utils/calls'\nimport { getAddress } from 'utils/addressHelpers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { getVotingPower } from '../helpers'\n\ninterface State {\n  verificationHash: string\n  cakeBalance: number\n  cakeVaultBalance: number\n  cakePoolBalance: number\n  poolsBalance: number\n  cakeBnbLpBalance: number\n  ifoPoolBalance: number\n  total: number\n}\n\nconst initialState: State = {\n  verificationHash: null,\n  cakeBalance: 0,\n  cakeVaultBalance: 0,\n  cakePoolBalance: 0,\n  poolsBalance: 0,\n  cakeBnbLpBalance: 0,\n  ifoPoolBalance: 0,\n  total: 0,\n}\n\nconst useGetVotingPower = (block?: number, isActive = true): State & { isLoading: boolean } => {\n  const { account } = useWeb3React()\n  const [votingPower, setVotingPower] = useState(initialState)\n  const [isLoading, setIsLoading] = useState(!!account)\n\n  useEffect(() => {\n    const fetchVotingPower = async () => {\n      setIsLoading(true)\n\n      try {\n        const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n        const eligiblePools = await getActivePools(blockNumber)\n        const poolAddresses = eligiblePools.map(({ contractAddress }) => getAddress(contractAddress))\n        const {\n          cakeBalance,\n          cakeBnbLpBalance,\n          cakePoolBalance,\n          total,\n          poolsBalance,\n          cakeVaultBalance,\n          verificationHash,\n          IFOPoolBalance,\n        } = await getVotingPower(account, poolAddresses, blockNumber)\n\n        if (isActive) {\n          setVotingPower((prevVotingPower) => ({\n            ...prevVotingPower,\n            verificationHash,\n            cakeBalance: parseFloat(cakeBalance),\n            cakeBnbLpBalance: parseFloat(cakeBnbLpBalance),\n            cakePoolBalance: parseFloat(cakePoolBalance),\n            poolsBalance: parseFloat(poolsBalance),\n            cakeVaultBalance: parseFloat(cakeVaultBalance),\n            ifoPoolBalance: IFOPoolBalance ? parseFloat(IFOPoolBalance) : 0,\n            total: parseFloat(total),\n          }))\n        }\n      } finally {\n        setIsLoading(false)\n      }\n    }\n\n    if (account && isActive) {\n      fetchVotingPower()\n    }\n  }, [account, block, setVotingPower, isActive, setIsLoading])\n\n  return { ...votingPower, isLoading }\n}\n\nexport default useGetVotingPower\n"],"sourceRoot":""}