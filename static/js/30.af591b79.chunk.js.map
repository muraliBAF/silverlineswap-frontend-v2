{"version":3,"sources":["views/Home/components/CompositeImage.tsx","views/Home/components/Hero.tsx","views/Home/components/SalesSection/data.ts","views/Home/components/IconCard.tsx","views/Home/components/MetricsSection/StatCardContent.tsx","views/Home/components/MetricsSection/index.tsx","hooks/api.ts","views/Home/components/SalesSection/index.tsx","views/Home/components/WinSection/index.tsx","views/Home/hooks/useGetTopFarmsByApr.tsx","views/Home/hooks/useGetTopPoolsByApr.tsx","views/Home/components/FarmsPoolsRow/TopFarmPool.tsx","views/Home/components/FarmsPoolsRow/RowHeading.tsx","views/Home/components/FarmsPoolsRow/index.tsx","views/Home/components/Footer.tsx","views/Home/components/CakeDataRow.tsx","views/Home/hooks/useFarmsWithBalance.tsx","views/Home/components/UserBanner/HarvestCard.tsx","views/Home/components/UserBanner/EarningsText.tsx","views/Home/components/UserBanner/UserDetail.tsx","views/Home/components/UserBanner/index.tsx","views/Home/index.tsx","views/Home/components/Banners/IFOBanner.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","components/PageSection/svg/CurvedSvg.tsx","components/PageSection/CurvedDivider.tsx","components/PageSection/index.tsx","components/ProfileAvatarWithTeam.tsx","views/Home/components/ColoredWordHeading.tsx"],"names":["Resolution","BunnyWrapper","styled","div","keyframes","theme","mediaQueries","xxl","Wrapper","xl","Hero","t","useTranslation","account","useWeb3React","useTheme","src","className","alt","position","flexDirection","alignItems","justifyContent","mt","id","flex","scale","color","mb","style","textTransform","ConnectWalletButton","mr","variant","to","minWidth","height","width","swapSectionData","headingText","bodyText","reverse","primaryButton","text","external","secondaryButton","images","path","attributes","earnSectionData","cakeSectionData","StyledCardBorder","Card","StyledCard","IconWrapper","Box","md","rotation","IconCard","icon","background","borderColor","children","props","borderBackground","StatCardContent","highlightColor","useMatchBreakpoints","isMobile","isTablet","minHeight","fontWeight","fontSize","BgImg","img","Stats","data","useState","setData","useEffect","a","fetch","response","json","responseData","console","error","fetchData","useGetStats","tvlString","formatLocalisedCompactNumber","tvl","split","UsersCardData","TradesCardData","StakedCardData","pt","textAlign","colors","secondary","floatingAnim","x","y","maxHeight","DummyImg","ImageWrapper","getImageUrl","base","imageSrc","resolution","extension","getSrcSet","undefined","CompositeImage","type","srcSet","map","image","InnerSection","Flex","SalesSection","headingTranslatedText","bodyTranslatedText","ml","alignSelf","ColoredWordHeading","href","TransparentFrame","cardBorder","WinSection","isDark","useGetTopFarmsByApr","isIntersecting","dispatch","useAppDispatch","farms","useFarms","FetchStatus","Idle","fetchStatus","setFetchStatus","topFarms","setTopFarms","cakePriceBusd","usePriceCakeBusd","fetchFarmData","Fetching","activeFarms","nonArchivedFarms","filter","farm","pid","fetchFarmsPublicDataAsync","Fetched","Failed","farmsState","farmsWithApr","lpTotalInQuoteToken","quoteTokenPriceBusd","multiplier","totalLiquidity","times","getFarmApr","poolWeight","lpAddresses","ChainId","MAINNET","cakeRewardsApr","lpRewardsApr","apr","sortedByApr","orderBy","slice","getTopFarmsByApr","useGetTopPoolsByApr","topPools","setTopPools","pools","usePools","fetchPoolsPublicData","fetchCakeVaultFees","fetchPoolsPublicDataAsync","activePools","pool","getTopPoolsByApr","StyledWrapper","AbsoluteWrapper","topOffset","visible","index","sm","inputSecondary","TopFarmPool","title","percentage","bold","Balance","lineHeight","unit","value","RowHeading","firstWord","remainingWords","join","Grid","FarmsPoolsRow","showFarms","setShowFarms","useIntersectionObserver","observerRef","timer","useRef","isLoaded","startTimer","useCallback","current","setInterval","prev","clearInterval","ref","onClick","topFarm","lpSymbol","topPool","vaultKey","vaultPoolConfig","name","sousId","earningSymbol","earningToken","symbol","stakingSymbol","stakingToken","BgWrapper","Footer","StyledColumn","noMobileBorder","CakeDataRow","totalSupply","useTotalSupply","burnedBalance","getBalanceNumber","useBurnedBalance","tokens","cake","address","cakeSupply","mcap","mcapString","toNumber","decimals","my","gt","marketCap","cakeEmissions","useFarmsWithBalance","farmsWithStakedBalance","setFarmsWithStakedBalance","earningsSum","setEarningsSum","fastRefresh","useFastFresh","calls","farmsConfig","getMasterChefAddress","params","multicall","masterChefABI","rawResults","results","balance","BigNumber","farmsWithBalances","balanceType","totalEarned","reduce","accum","earning","earningNumber","eq","DEFAULT_TOKEN_DECIMAL","fetchBalances","HarvestCard","pendingTx","setPendingTx","useToast","toastSuccess","toastError","farmEarningsSum","masterChefContract","useMasterchef","earningsBusd","multipliedBy","numTotalToCollect","length","numFarmsToCollect","hasCakePoolToCollect","toString","count","earningsText","getEarningsText","preText","harvestAllFarms","farmWithBalance","harvestFarm","logError","isLoading","endIcon","spin","disabled","Desktop","Mobile","Sticker","invertedContrast","radii","circle","card","boxShadow","UserDetail","NoProfileAvatarIcon","useProfile","profile","truncatedAddress","truncateHash","ProfileAvatarWithTeam","userName","username","UserBanner","p","StyledHeroSection","Heading","xs","PageSection","UserBannerWrapper","Container","lg","Home","HomeSectionContainerStyles","margin","maxWidth","Page","innerProps","hasCurvedDivider","MetricsSection","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","i","F","s","n","done","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","sharedStyles","clipPath","clipFill","css","dark","light","ConcaveContainer","ConvexContainer","ConvexTop","clipPathUnits","d","ConvexBottom","ConcaveTop","ConcaveBottom","dividerFill","ComponentWrapper","CurvedDivider","dividerPosition","dividerComponent","concave","showConvexTop","showConvexBottom","showConcaveTop","showConcaveBottom","BackgroundColor","getPadding","ChildrenWrapper","svgFill","concaveDivider","containerProps","TeamAvatar","AvatarWrapper","bg","AvatarInactive","nft","thumbnail","isActive","team","firstColor","displayedColor"],"mappings":"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","file":"static/js/30.af591b79.chunk.js","sourcesContent":["import React from 'react'\nimport styled, { keyframes } from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\n\nconst floatingAnim = (x: string, y: string) => keyframes`\n  from {\n    transform: translate(0,  0px);\n  }\n  50% {\n    transform: translate(${x}, ${y});\n  }\n  to {\n    transform: translate(0, 0px);\n  }\n`\n\nconst Wrapper = styled(Box)<{ maxHeight: string }>`\n  position: relative;\n  max-height: ${({ maxHeight }) => maxHeight};\n\n  & :nth-child(2) {\n    animation: ${floatingAnim('1px', '5px')} 6s ease-in-out infinite;\n    animation-delay: 1s;\n  }\n\n  & :nth-child(3) {\n    animation: ${floatingAnim('5px', '10px')} 3s ease-in-out infinite;\n    animation-delay: 0.66s;\n  }\n\n  & :nth-child(4) {\n    animation: ${floatingAnim('6px', '5px')} 3s ease-in-out infinite;\n    animation-delay: 0.33s;\n  }\n\n  & :nth-child(5) {\n    animation: ${floatingAnim('4px', '12px')} 3s ease-in-out infinite;\n    animation-delay: 0s;\n  }\n`\n\nconst DummyImg = styled.img<{ maxHeight: string }>`\n  max-height: ${({ maxHeight }) => maxHeight};\n  visibility: hidden;\n`\n\nconst ImageWrapper = styled(Box)`\n  height: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n\n  img {\n    max-height: 100%;\n    width: auto;\n\n    ${({theme})=>theme.mediaQueries.xxl} {\n      max-width: 80%;\n    }\n  }\n`\n\nenum Resolution {\n  MD = '1.5x',\n  LG = '2x',\n}\ninterface ImageAttributes {\n  src: string\n  alt: string\n}\n\nexport interface CompositeImageProps {\n  path: string\n  attributes: ImageAttributes[]\n}\n\ninterface ComponentProps extends CompositeImageProps {\n  animate?: boolean\n  maxHeight?: string\n}\n\nexport const getImageUrl = (base: string, imageSrc: string, resolution?: Resolution, extension = '.png'): string =>\n  `${base}${imageSrc}${resolution ? `@${resolution}${extension}` : extension}`\n\nexport const getSrcSet = (base: string, imageSrc: string, extension = '.png') => {\n  return `${getImageUrl(base, imageSrc, undefined, extension)} 512w`\n}\n\nconst CompositeImage: React.FC<ComponentProps> = ({ path, attributes, maxHeight = '512px' }) => {\n  return (\n    <Wrapper maxHeight={maxHeight}>\n      <picture>\n        <source type=\"image/png\" srcSet={getSrcSet(path, attributes[0].src)} />\n        <DummyImg src={getImageUrl(path, attributes[0].src)} maxHeight={maxHeight} />\n      </picture>\n      {attributes.map((image) => (\n        <ImageWrapper key={image.src}>\n          <picture>\n            <source type=\"image/png\" srcSet={getSrcSet(path, image.src)} />\n            <img src={getImageUrl(path, image.src)} alt={image.alt} />\n          </picture>\n        </ImageWrapper>\n      ))}\n    </Wrapper>\n  )\n}\n\nexport default CompositeImage\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\nimport { Link } from 'react-router-dom'\nimport { Flex, Heading, Button } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useTranslation } from 'contexts/Localization'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport useTheme from 'hooks/useTheme'\nimport { SlideSvgDark, SlideSvgLight } from './SlideSvg'\nimport CompositeImage, { getSrcSet, CompositeImageProps } from './CompositeImage'\n\nconst flyingAnim = () => keyframes`\n  from {\n    transform: translate(0,  0px);\n  }\n  50% {\n    transform: translate(-5px, -5px);\n  }\n  to {\n    transform: translate(0, 0px);\n  }\n`\n\nconst BunnyWrapper = styled.div`\n  width: 100%;\n  // animation: ${flyingAnim} 3.5s ease-in-out infinite;\n\n  img {\n    ${ ({theme}) => theme.mediaQueries.xxl } {\n      width: 105%;\n      max-width: 105%;\n      transform: scale(1.2);\n    }\n  }\n`\n\nconst Wrapper = styled.div`\n  padding-top: 40px;\n\n  .hero-bg {\n    position: absolute;\n    left: 0;\n    top: -50px;\n  }\n\n  .hero-heading {\n    font-size: 30px;\n    font-family: 'Roboto';\n    line-height: 1.3;\n    letter-spacing: 0.5px;\n\n    ${ ({ theme }) => theme.mediaQueries.xl } {\n      font-size: 45px;\n      letter-spacing: 2px;\n    }\n  }\n\n  .hero-subheading {\n    font-weight: 400;\n    line-height: 1.4;\n    letter-spacing: 0.5px;\n    margin-bottom: 35px;\n    font-family: 'Poppins', sans-serif;\n\n    ${ ({ theme }) => theme.mediaQueries.xl } {\n      font-size: 18px;\n      letter-spacing: 0;\n      margin-bottom: 30px;\n    }\n  }\n`;\n\nconst Hero = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { theme } = useTheme()\n\n  return (\n    <Wrapper>\n      {/* <BgWrapper>\n        <InnerWrapper>{theme.isDark ? <SlideSvgDark width=\"100%\" /> : <SlideSvgLight width=\"100%\" />}</InnerWrapper>\n      </BgWrapper> */}\n      <img src=\"/images/hero-bg.png\" className='hero-bg' alt=\"\" />\n      <Flex\n        position=\"relative\"\n        flexDirection={['column-reverse', null, null, 'row']}\n        alignItems={['flex-end', null, null, 'center']}\n        justifyContent=\"center\"\n        mt={[account ? '170px' : '50px', null, 0]}\n        id=\"homepage-hero\"\n      >\n        <Flex flex=\"1\" flexDirection=\"column\" >\n          <Heading scale=\"xxl\" className='hero-heading' color=\"text\" mb=\"24px\" style={{textTransform:'uppercase'}} >\n            {t('Silverline satellite discovered a brand-new orbit, SPARC.')}\n          </Heading>\n          <Heading scale=\"md\" className='hero-subheading' mb=\"24px\" >\n            {t('Silverline launches its SPARC Jet, a prediction game on the DEX planet, SilverLineSwap.')}\n          </Heading>\n          <Flex>\n            {!account && <ConnectWalletButton className=\"sl-sky-glow\" mr=\"30px\" variant='secondary' />}\n            <Link to=\"/swap\">\n              <Button variant={!account ? 'secondary' : 'primary'} className={!account? 'sl-pink-glow' : ''} style={{minWidth:'150px'}} >{t('Trade Now')}</Button>\n            </Link>\n          </Flex>\n        </Flex>\n        <Flex\n          height={[null, null, null, '100%']}\n          width={['100%', null, null, '100%']}\n          flex={[null, null, null, '1']}\n          mb={['24px', null, null, '0']}\n          position=\"relative\"\n        >\n          <BunnyWrapper>\n            <img src=\"/images/home/hero.png\" alt=\"\" />\n          </BunnyWrapper>\n          {/* <StarsWrapper>\n            <CompositeImage {...starsImage} />\n          </StarsWrapper> */}\n        </Flex>\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default Hero\n","import { SalesSectionProps } from '.'\n\nexport const swapSectionData: SalesSectionProps = {\n  headingText: 'Play, Predict, Win and Earn BNB',\n  bodyText: 'SPARC- World’s first Prediction Platform, where losers are rewarded, If you win you will earn BNB, if you Lose you will earn SLN tokens.',\n  reverse: true,\n  primaryButton: {\n    to: '/swap',\n    text: 'Trade Now',\n    external: false,\n  },\n  secondaryButton: {\n    to: 'https://docs.silverlineswap.finance/',\n    text: 'Learn',\n    external: true,\n  },\n  images: {\n    path: '/images/home/',\n    attributes: [\n      { src: 'trade', alt: 'Trade' },\n    ],\n  },\n}\n\nexport const earnSectionData: SalesSectionProps = {\n  headingText: 'Enjoy the broadest spectrum of benefits from Staking.',\n  bodyText: 'Earn a passive income from staking.',\n  reverse: false,\n  primaryButton: {\n    to: '/farms',\n    text: 'Explore',\n    external: false,\n  },\n  secondaryButton: {\n    to: 'https://docs.silverlineswap.finance/products/yield-farming',\n    text: 'Learn',\n    external: true,\n  },\n  images: {\n    path: '/images/home/',\n    attributes: [\n      { src: 'earn', alt: 'Earn' },\n    ],\n  },\n}\n\nexport const cakeSectionData: SalesSectionProps = {\n  headingText: '',\n  bodyText:\n    `A healthy environment is clearly shown by the presence of butterflies.\n    You can pollinate your Crypto Gains by Buying, Trading, Farming, Staking, Yielding & Spending\n    it to create a garden on the DEX planet with our SLN Butterfly Tokens.`,\n  reverse: true,\n  primaryButton: {\n    to: '/swap?outputCurrency=0xC8B7fE1d6B2A7b21D44D2239831Ac6079A471E16',\n    text: 'Buy SLCT',\n    external: false,\n  },\n  secondaryButton: {\n    to: 'https://docs.silverlineswap.finance/tokenomics/cake',\n    text: 'Learn',\n    external: true,\n  },\n\n  images: {\n    path: '/images/home/',\n    attributes: [\n      { src: 'token', alt: 'Token' },\n    ],\n  },\n}\n\n","import React, { ReactNode } from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody, Box, CardProps } from '@pancakeswap/uikit'\n\nconst StyledCardBorder = styled(Card)<{ background: string; rotation?: string }>`\n  border-radius: 24px;\n  background: linear-gradient(180deg, #CB9DFF 0.6%, rgba(0, 0, 0, 0) 100%);\n  padding: 2px;\n  width: 33.33%;\n\n  @media (max-width: 575px) {\n    width: 100%;\n  }\n`;\n\nconst StyledCard = styled(Card)`\n  padding: 1px 1px 4px 1px;\n  box-sizing: border-box;\n  text-align: center;\n  background: linear-gradient(180deg, #54248A 0%, #644096 37.29%, #6D5198 44.79%, #603C92 100%);\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  border-radius: 23px;\n  width: 100%;\n`\n\nconst IconWrapper = styled(Box)<{ rotation?: string }>`\n  position: absolute;\n  top: 24px;\n  right: 24px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    ${({ rotation }) => (rotation ? `transform: rotate(${rotation});` : '')}\n  }\n`\n\ninterface IconCardProps extends IconCardData, CardProps {\n  children: ReactNode\n}\n\nexport interface IconCardData {\n  icon: ReactNode\n  background?: string\n  borderColor?: string\n  rotation?: string\n}\n\nconst IconCard: React.FC<IconCardProps> = ({ icon, background, borderColor, rotation, children, ...props }) => {\n  return (\n    <StyledCardBorder background={background} borderBackground={borderColor} rotation={rotation} {...props}>\n      <StyledCard>\n        <IconWrapper rotation={rotation}>{icon}</IconWrapper>\n        {children}\n      </StyledCard>\n    </StyledCardBorder>\n  )\n}\n\nexport default IconCard\n","import React from 'react'\nimport { Heading, Flex, Text, useMatchBreakpoints } from '@pancakeswap/uikit'\n\nconst StatCardContent: React.FC<{ headingText: string; bodyText: string; highlightColor: string }> = ({\n  headingText,\n  bodyText,\n  highlightColor,\n}) => {\n  const { isMobile, isTablet } = useMatchBreakpoints()\n  const isSmallerScreen = isMobile || isTablet\n  // const split = headingText.split(' ')\n  // const lastWord = split.pop()\n  // const remainingWords = split.slice(0, split.length).join(' ')\n\n  return (\n    <Flex\n      minHeight={['150px', null, null, '168px']}\n      minWidth=\"232px\"\n      width=\"100%\"\n      flexDirection=\"column\"\n      justifyContent=\"center\"\n      mt={[null, null, 50, '110px']}\n      mb={[null, null, 50, '80px']}\n    >\n      {/* {isSmallerScreen && remainingWords.length > 13 ? (\n        <Heading scale=\"lg\">{remainingWords}</Heading>\n      ) : (\n        <Heading scale=\"xl\">{remainingWords}</Heading>\n      )} */}\n      <Heading color={highlightColor} scale=\"xl\" mb=\"10px\">\n        {headingText}\n      </Heading>\n      <Text className='font-poppins' fontWeight={400} fontSize='20px' color=\"textSubtle\">{bodyText}</Text>\n    </Flex>\n  )\n}\n\nexport default StatCardContent\n","import React from 'react'\nimport { Heading, Flex, Text, Skeleton, ChartIcon, CommunityIcon, SwapIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useGetStats } from 'hooks/api'\nimport useTheme from 'hooks/useTheme'\nimport { formatLocalisedCompactNumber } from 'utils/formatBalance'\nimport styled from 'styled-components'\nimport IconCard, { IconCardData } from '../IconCard'\nimport StatCardContent from './StatCardContent'\nimport GradientLogo from '../GradientLogoSvg'\n\n// Values fetched from bitQuery effective 6/9/21\nconst txCount = 30841921\nconst addressCount = 2751624\n\nconst BgImg = styled.img`\n  position: absolute;\n  left: 50%;\n  bottom: -18%;\n  width: 100%;\n  transform: translateX(-50%);\n`;\n\nconst Stats = () => {\n  const { t } = useTranslation()\n  const data = useGetStats()\n  const { theme } = useTheme()\n\n  const tvlString = data ? formatLocalisedCompactNumber(data.tvl) : '-'\n  const trades = formatLocalisedCompactNumber(txCount)\n  const users = formatLocalisedCompactNumber(addressCount)\n\n  const tvlText = t('And those users are now entrusting the platform with over $%tvl% in funds.', { tvl: tvlString })\n  const [entrusting, inFunds] = tvlText.split(tvlString)\n\n  const UsersCardData: IconCardData = {\n    icon: <img src=\"/images/home/stats-user.svg\" alt=\"\" />,\n  }\n\n  const TradesCardData: IconCardData = {\n    icon: <img src=\"/images/home/stats-trade.svg\" alt=\"\" />,\n  }\n\n  const StakedCardData: IconCardData = {\n    icon: <img src=\"/images/home/stats-graph.svg\" alt=\"\" />,\n  }\n\n  return (\n    <Flex pt=\"0\" justifyContent=\"center\" alignItems=\"center\" flexDirection=\"column\">\n      {/* <GradientLogo height=\"48px\" width=\"48px\" mb=\"24px\" /> */}\n      <BgImg alt=\"\" src=\"/images/home/sky-lines.png\" />\n      <img src=\"/images/butterfly.png\" width=\"100\" alt=\"Butterfly icon\" />\n      <Heading textAlign=\"center\" scale=\"xl\" mt=\"20px\" >\n        {t('#GetInLineForSliverLine')}\n      </Heading>\n      <Text textAlign=\"center\" color=\"textSubtle\" className='font-poppins' fontSize='20px' mt=\"25px\" mb=\"40px\" >\n      A decentralized exchange providing the smoothest possible peer-to-peer trading experience, with safety being our core mantra. SilverLineSwap allows users to trade any token on the Binance Smart Chain in a few simple clicks, and has the added benefit of its own private SilverLineSwap Dashboard! Step in and be a part of the future token exchange economy.\n      </Text>\n      <Flex flexDirection={['column', null, 'row', null]} width='100%' >\n        <IconCard {...UsersCardData} mr={[null, null, null, '16px']} mb={['16px', null, null, '0']}>\n          <StatCardContent\n            headingText='8000 users'\n            bodyText={t('in the last 30 days')}\n            highlightColor={theme.colors.secondary}\n          />\n        </IconCard>\n        <IconCard {...TradesCardData} mr={[null, null, null, '16px']} mb={['16px', null, null, '0']}>\n          <StatCardContent\n            headingText='8000 traders'\n            bodyText={t('made in the last 30 days')}\n            highlightColor={theme.colors.secondary}\n          />\n        </IconCard>\n        <IconCard {...StakedCardData}>\n          <StatCardContent\n            headingText='Staking'\n            bodyText={t('Will start soon!!!')}\n            highlightColor={theme.colors.secondary}\n          />\n        </IconCard>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default Stats\n","import { useEffect, useState } from 'react'\n\n/* eslint-disable camelcase */\nexport interface DeBankTvlResponse {\n  id: string\n  chain: string\n  name: string\n  site_url: string\n  logo_url: string\n  has_supported_portfolio: boolean\n  tvl: number\n}\n\nexport const useGetStats = () => {\n  const [data, setData] = useState<DeBankTvlResponse | null>(null)\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://openapi.debank.com/v1/protocol?id=bsc_pancakeswap')\n        const responseData: DeBankTvlResponse = await response.json()\n\n        setData(responseData)\n      } catch (error) {\n        console.error('Unable to fetch data:', error)\n      }\n    }\n\n    fetchData()\n  }, [setData])\n\n  return data\n}\n","import React from 'react'\nimport { Flex, Text, Button, Link } from '@pancakeswap/uikit'\nimport { Link as RouterLink } from 'react-router-dom'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport CompositeImage, { CompositeImageProps } from '../CompositeImage'\nimport ColoredWordHeading from '../ColoredWordHeading'\n\nconst InnerSection = styled(Flex)`\n  ${({theme})=> theme.mediaQueries.xxl} {\n    transform: translateX(-3vw);\n  }\n`\n\ninterface SalesSectionButton {\n  to: string\n  text: string\n  external: boolean\n}\n\nexport interface SalesSectionProps {\n  headingText: string\n  bodyText: string\n  reverse: boolean\n  primaryButton: SalesSectionButton\n  secondaryButton: SalesSectionButton\n  images: CompositeImageProps\n}\n\nconst SalesSection: React.FC<SalesSectionProps> = (props) => {\n  const { t } = useTranslation()\n\n  const { headingText, bodyText, reverse, primaryButton, secondaryButton, images } = props\n\n  const headingTranslatedText = t(headingText)\n  const bodyTranslatedText = t(bodyText)\n\n  return (\n    <InnerSection flexDirection=\"column\">\n      <Flex\n        flexDirection={['column-reverse', null, null, reverse ? 'row-reverse' : 'row']}\n        alignItems={['flex-end', null, null, 'center']}\n        justifyContent=\"center\"\n      >\n        <Flex\n          flexDirection=\"column\"\n          flex=\"1\"\n          ml={[null, null, null, reverse && '4px']}\n          mr={[null, null, null, !reverse && '4px']}\n          alignSelf={['flex-start', null, null, 'center']}\n        >\n          <ColoredWordHeading text={headingTranslatedText} />\n          <Text color=\"textSubtle\" mb=\"24px\" className='font-poppins' fontSize='20px' >\n            {bodyTranslatedText}\n          </Text>\n          <Flex>\n            <Button className='sl-sky-glow' variant='secondary' mr=\"35px\" width={156} >\n              {primaryButton.external ? (\n                <Link external href={primaryButton.to}>\n                  <Text color=\"card\" fontSize=\"16px\">\n                    {t(primaryButton.text)}\n                  </Text>\n                </Link>\n              ) : (\n                <RouterLink to={primaryButton.to}>\n                  <Text color=\"card\" fontSize=\"16px\">\n                    {t(primaryButton.text)}\n                  </Text>\n                </RouterLink>\n              )}\n            </Button>\n            <Button className='sl-pink-glow' variant='secondary' width={156} >\n              {secondaryButton.external?  (\n                <Link external href={secondaryButton.to}>\n                  <Text color=\"#fff\" fontSize=\"16px\">\n                    {t(secondaryButton.text)}\n                  </Text>\n                </Link>\n              ) : (\n                <RouterLink to={secondaryButton.to}>\n                  <Text color=\"#fff\" fontSize=\"16px\">\n                    {t(secondaryButton.text)}\n                  </Text>\n                </RouterLink>\n              )}\n            </Button>\n          </Flex>\n        </Flex>\n        <Flex\n          height={['192px', null, null, '100%']}\n          width={['192px', null, null, '100%']}\n          flex={[null, null, null, '1']}\n          mb={['24px', null, null, '0']}\n        >\n          <CompositeImage {...images} />\n        </Flex>\n      </Flex>\n    </InnerSection>\n  )\n}\n\nexport default SalesSection\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Text, TicketFillIcon, PredictionsIcon, Heading, Button } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport ColoredWordHeading from '../ColoredWordHeading'\nimport IconCard, { IconCardData } from '../IconCard'\nimport PredictionCardContent from './PredictionCardContent'\nimport LotteryCardContent from './LotteryCardContent'\nimport CompositeImage from '../CompositeImage'\n\nconst TransparentFrame = styled.div<{ isDark: boolean }>`\n  background: linear-gradient(to bottom, #713AA6, #6B2EA3);\n  padding: 16px;\n  border: 2px solid ${({ theme }) => theme.colors.cardBorder};\n  box-sizing: border-box;\n  backdrop-filter: blur(12px);\n  border-radius: 23px;\n  position: relative;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    padding: 40px;\n  }\n`\n\nconst WinSection = () => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n\n  return (\n    <>\n      <TransparentFrame isDark={theme.isDark}>\n        <Flex alignItems='center' flexDirection={['column',null,'row',null]} >\n          <div style={{flex:1}} >\n            <img src=\"/images/home/lottery.png\" alt=\"Lottery\" />\n          </div>\n          <div style={{flex:1}} >\n            <Heading scale='xl' color='text' >\n            Undocking our NFT soon on the DEX planet\n            </Heading>\n            {/* <Heading scale='lg' color='text' >\n              In SLN prizes this around\n            </Heading>\n            <Text fontSize='20px' fontFamily='Poppins' mt='20px' >Buy tickets with SLCT, win SLCT if your numbers match</Text> */}\n            {/* <Button variant='secondary' width={156} mt='30px' className='sl-sky-glow' >Buy Tickets</Button> */}\n          </div>\n        </Flex>\n      </TransparentFrame>\n    </>\n  )\n}\n\nexport default WinSection\n","import { useState, useEffect } from 'react'\nimport { ChainId } from '@pancakeswap/sdk'\nimport { useFarms, usePriceCakeBusd } from 'state/farms/hooks'\nimport { useAppDispatch } from 'state'\nimport { fetchFarmsPublicDataAsync, nonArchivedFarms } from 'state/farms'\nimport { getFarmApr } from 'utils/apr'\nimport { orderBy } from 'lodash'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport { DeserializedFarm } from 'state/types'\nimport { FetchStatus } from 'config/constants/types'\n\nconst useGetTopFarmsByApr = (isIntersecting: boolean) => {\n  const dispatch = useAppDispatch()\n  const { data: farms } = useFarms()\n  const [fetchStatus, setFetchStatus] = useState(FetchStatus.Idle)\n  const [topFarms, setTopFarms] = useState<FarmWithStakedValue[]>([null, null, null, null, null])\n  const cakePriceBusd = usePriceCakeBusd()\n\n  useEffect(() => {\n    const fetchFarmData = async () => {\n      setFetchStatus(FetchStatus.Fetching)\n      const activeFarms = nonArchivedFarms.filter((farm) => farm.pid !== 0)\n      try {\n        await dispatch(fetchFarmsPublicDataAsync(activeFarms.map((farm) => farm.pid)))\n        setFetchStatus(FetchStatus.Fetched)\n      } catch (e) {\n        console.error(e)\n        setFetchStatus(FetchStatus.Failed)\n      }\n    }\n\n    if (isIntersecting && fetchStatus === FetchStatus.Idle) {\n      fetchFarmData()\n    }\n  }, [dispatch, setFetchStatus, fetchStatus, topFarms, isIntersecting])\n\n  useEffect(() => {\n    const getTopFarmsByApr = (farmsState: DeserializedFarm[]) => {\n      const farmsWithPrices = farmsState.filter(\n        (farm) =>\n          farm.lpTotalInQuoteToken &&\n          farm.quoteTokenPriceBusd &&\n          farm.pid !== 0 &&\n          farm.multiplier &&\n          farm.multiplier !== '0X',\n      )\n      const farmsWithApr: FarmWithStakedValue[] = farmsWithPrices.map((farm) => {\n        const totalLiquidity = farm.lpTotalInQuoteToken.times(farm.quoteTokenPriceBusd)\n        const { cakeRewardsApr, lpRewardsApr } = getFarmApr(\n          farm.poolWeight,\n          cakePriceBusd,\n          totalLiquidity,\n          farm.lpAddresses[ChainId.MAINNET],\n        )\n        return { ...farm, apr: cakeRewardsApr, lpRewardsApr }\n      })\n\n      const sortedByApr = orderBy(farmsWithApr, (farm) => farm.apr + farm.lpRewardsApr, 'desc')\n      setTopFarms(sortedByApr.slice(0, 5))\n    }\n\n    if (fetchStatus === FetchStatus.Fetched && !topFarms[0]) {\n      getTopFarmsByApr(farms)\n    }\n  }, [setTopFarms, farms, fetchStatus, cakePriceBusd, topFarms])\n\n  return { topFarms }\n}\n\nexport default useGetTopFarmsByApr\n","import { useState, useEffect, useMemo } from 'react'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useAppDispatch } from 'state'\nimport { orderBy } from 'lodash'\nimport { VaultKey, DeserializedPool } from 'state/types'\nimport { fetchCakeVaultFees, fetchPoolsPublicDataAsync } from 'state/pools'\nimport { useCakeVault, useIfoPoolVault, usePools } from 'state/pools/hooks'\nimport { getAprData } from 'views/Pools/helpers'\nimport { FetchStatus } from 'config/constants/types'\n\nexport function usePoolsWithVault() {\n  const { pools: poolsWithoutAutoVault } = usePools()\n  const cakeVault = useCakeVault()\n  const ifoPool = useIfoPoolVault()\n  const pools = useMemo(() => {\n    const activePools = poolsWithoutAutoVault.filter((pool) => !pool.isFinished)\n    const cakePool = activePools.find((pool) => pool.sousId === 0)\n    const cakeAutoVault = { ...cakePool, vaultKey: VaultKey.CakeVault }\n    const ifoPoolVault = { ...cakePool, vaultKey: VaultKey.IfoPool }\n    const cakeAutoVaultWithApr = {\n      ...cakeAutoVault,\n      apr: getAprData(cakeAutoVault, cakeVault.fees.performanceFeeAsDecimal).apr,\n      rawApr: cakePool.apr,\n    }\n    const ifoPoolWithApr = {\n      ...ifoPoolVault,\n      apr: getAprData(ifoPoolVault, ifoPool.fees.performanceFeeAsDecimal).apr,\n      rawApr: cakePool.apr,\n    }\n    return [ifoPoolWithApr, cakeAutoVaultWithApr, ...poolsWithoutAutoVault]\n  }, [poolsWithoutAutoVault, cakeVault.fees.performanceFeeAsDecimal, ifoPool.fees.performanceFeeAsDecimal])\n\n  return pools\n}\n\nconst useGetTopPoolsByApr = (isIntersecting: boolean) => {\n  const dispatch = useAppDispatch()\n\n  const [fetchStatus, setFetchStatus] = useState(FetchStatus.Idle)\n  const [topPools, setTopPools] = useState<DeserializedPool[]>([null, null, null, null, null])\n\n  // const pools = usePoolsWithVault()\n  const {pools} = usePools()\n\n  const cakePriceBusd = usePriceCakeBusd()\n\n  useEffect(() => {\n    const fetchPoolsPublicData = async () => {\n      setFetchStatus(FetchStatus.Fetching)\n\n      try {\n        await dispatch(fetchCakeVaultFees())\n        await dispatch(fetchPoolsPublicDataAsync())\n        setFetchStatus(FetchStatus.Fetched)\n      } catch (e) {\n        console.error(e)\n        setFetchStatus(FetchStatus.Failed)\n      }\n    }\n\n    if (isIntersecting && fetchStatus === FetchStatus.Idle) {\n      fetchPoolsPublicData()\n    }\n  }, [dispatch, setFetchStatus, fetchStatus, topPools, isIntersecting])\n\n  useEffect(() => {\n    const getTopPoolsByApr = (activePools: DeserializedPool[]) => {\n      const sortedByApr = orderBy(activePools, (pool: DeserializedPool) => pool.apr || 0, 'desc')\n      setTopPools(sortedByApr.slice(0, 5))\n    }\n    if (fetchStatus === FetchStatus.Fetched && !topPools[0]) {\n      getTopPoolsByApr(pools)\n    }\n  }, [setTopPools, pools, fetchStatus, cakePriceBusd, topPools])\n\n  return { topPools }\n}\n\nexport default useGetTopPoolsByApr\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Skeleton, Text } from '@pancakeswap/uikit'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface TopFarmPoolProps {\n  title: string\n  percentage: number\n  index: number\n  visible: boolean\n}\n\nconst StyledWrapper = styled(Flex)<{ index: number }>`\n  position: relative;\n`\n\nconst AbsoluteWrapper = styled(Flex)<{ visible: boolean; index: number; topOffset: string }>`\n  position: absolute;\n  top: ${({ topOffset }) => topOffset};\n  opacity: ${({ visible }) => (visible ? 1 : 0)};\n  margin-top: ${({ visible }) => (visible ? 0 : `50%`)};\n  transition: opacity, margin-top, 0.4s ease-out;\n  flex-direction: column;\n\n  ${({ index, theme }) =>\n    index > 0\n      ? `\n         ${theme.mediaQueries.sm} {\n           height: 80px;\n           top: 0;\n           padding-left: 16px;\n           border-left: 1px ${theme.colors.inputSecondary} solid;\n         }\n       `\n      : `padding-right: 16px;`}\n`\n\nconst TopFarmPool: React.FC<TopFarmPoolProps> = ({ title, percentage, index, visible }) => {\n  const { t } = useTranslation()\n\n  const topOffset = () => {\n    if (index >= 0 && index < 2) {\n      return '0px'\n    }\n\n    if (index >= 2 && index < 3) {\n      return '80px'\n    }\n\n    return '160px'\n  }\n\n  return (\n    <StyledWrapper index={index}>\n      <AbsoluteWrapper index={index} visible={visible} topOffset={topOffset()}>\n        {title ? (\n          <Text bold mb=\"8px\" fontSize=\"12px\" color=\"secondary\">\n            {title}\n          </Text>\n        ) : (\n          <Skeleton width={80} height={12} mb=\"8px\" />\n        )}\n        {percentage ? (\n          <Balance lineHeight=\"1.1\" fontSize=\"16px\" bold unit=\"%\" value={percentage} />\n        ) : (\n          <Skeleton width={60} height={16} />\n        )}\n        {percentage ? (\n          <Text fontSize=\"16px\" color=\"textSubtle\">\n            {t('APR')}\n          </Text>\n        ) : (\n          <Skeleton width={30} height={16} mt=\"4px\" />\n        )}\n      </AbsoluteWrapper>\n    </StyledWrapper>\n  )\n}\n\nexport default TopFarmPool\n","import React from 'react'\nimport { Heading, TextProps } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\n\ninterface HeadingProps extends TextProps {\n  text: string\n}\n\nconst RowHeading: React.FC<HeadingProps> = ({ text, ...props }) => {\n  const { theme } = useTheme()\n  const split = text.split(' ')\n  const firstWord = split[0]\n  const remainingWords = split.slice(1).join(' ')\n\n  return (\n    <Heading {...props}>\n      {firstWord}\n      <span style={{ color: theme.colors.secondary }}> {remainingWords}</span>\n    </Heading>\n  )\n}\n\nexport default RowHeading\n","import React, { useState, useEffect, useRef, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Flex, Box, SwapVertIcon, IconButton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { DeserializedPool } from 'state/types'\nimport useIntersectionObserver from 'hooks/useIntersectionObserver'\nimport useGetTopFarmsByApr from 'views/Home/hooks/useGetTopFarmsByApr'\nimport useGetTopPoolsByApr from 'views/Home/hooks/useGetTopPoolsByApr'\nimport { vaultPoolConfig } from 'config/constants/pools'\nimport TopFarmPool from './TopFarmPool'\nimport RowHeading from './RowHeading'\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, auto);\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-gap: 16px;\n    grid-template-columns: repeat(5, auto);\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-gap: 32px;\n  }\n`\n\nconst FarmsPoolsRow = () => {\n  const [showFarms, setShowFarms] = useState(false)\n  const { t } = useTranslation()\n  const { observerRef, isIntersecting } = useIntersectionObserver()\n  const { topFarms } = useGetTopFarmsByApr(isIntersecting)\n  const { topPools } = useGetTopPoolsByApr(isIntersecting)\n\n  const timer = useRef<ReturnType<typeof setTimeout>>(null)\n  const isLoaded = topFarms[0] && topPools[0]\n\n  const startTimer = useCallback(() => {\n    timer.current = setInterval(() => {\n      setShowFarms((prev) => !prev)\n    }, 6000)\n  }, [timer])\n\n  useEffect(() => {\n    if (isLoaded) {\n      startTimer()\n    }\n\n    return () => {\n      clearInterval(timer.current)\n    }\n  }, [timer, isLoaded, startTimer])\n\n  const getPoolText = (pool: DeserializedPool) => {\n    if (pool.vaultKey) {\n      return t(vaultPoolConfig[pool.vaultKey].name)\n    }\n\n    if (pool.sousId === 0) {\n      return t('Manual SLCT')\n    }\n\n    return t('Stake %stakingSymbol% - Earn %earningSymbol%', {\n      earningSymbol: pool.earningToken.symbol,\n      stakingSymbol: pool.stakingToken.symbol,\n    })\n  }\n\n  return (\n    <div ref={observerRef}>\n      <Flex flexDirection=\"column\" mt=\"24px\">\n        <Flex mb=\"24px\">\n          <RowHeading text={showFarms ? t('Top Farms') : t('Top Syrup Pools')} />\n          <IconButton\n            variant=\"text\"\n            height=\"100%\"\n            width=\"auto\"\n            onClick={() => {\n              setShowFarms((prev) => !prev)\n              clearInterval(timer.current)\n              startTimer()\n            }}\n          >\n            <SwapVertIcon height=\"24px\" width=\"24px\" color=\"textSubtle\" />\n          </IconButton>\n        </Flex>\n        <Box height={['240px', null, '80px']}>\n          <Grid>\n            {topFarms.map((topFarm, index) => (\n              <TopFarmPool\n                // eslint-disable-next-line react/no-array-index-key\n                key={index}\n                title={topFarm?.lpSymbol}\n                percentage={topFarm?.apr + topFarm?.lpRewardsApr}\n                index={index}\n                visible={showFarms}\n              />\n            ))}\n          </Grid>\n          <Grid>\n            {topPools.map((topPool, index) => (\n              <TopFarmPool\n                // eslint-disable-next-line react/no-array-index-key\n                key={index}\n                title={topPool && getPoolText(topPool)}\n                percentage={topPool?.apr}\n                index={index}\n                visible={!showFarms}\n              />\n            ))}\n          </Grid>\n        </Box>\n      </Flex>\n    </div>\n  )\n}\n\nexport default FarmsPoolsRow\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Heading, Text, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport Container from 'components/Layout/Container'\nimport { useWeb3React } from '@web3-react/core'\nimport SunburstSvg from './SunburstSvg'\nimport CompositeImage from './CompositeImage'\n\nconst BgWrapper = styled.div`\n  overflow: hidden;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0px;\n  left: 0px;\n  background: #42008E;\n\n  .girl-img {\n    position: absolute;\n    left: 10%;\n    width: 15%;\n    top: 10%;\n\n    ${ ({theme}) => theme.mediaQueries.xxl } {\n      position: absolute;\n      left: calc(50% - 600px);\n      width: 226px;\n      top: 50%;\n      transform: translateY(-50%);\n    }\n  }\n`\n\nconst Wrapper = styled(Flex)`\n  z-index: 1;\n  position: relative;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  overflow: hidden;\n\n  .text {\n    font-size: 16px;\n    font-family: 'Poppins', sans-serif;\n\n    ${ ({theme}) => theme.mediaQueries.xl } {\n      font-size: 20px;\n    }\n  }\n`\n\nconst Footer = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  return (\n    <>\n      <BgWrapper>\n        <img className=\"girl-img\" src=\"/images/home/start.png\" alt=\"\" />\n      </BgWrapper>\n      <Wrapper>\n        <Heading mb=\"24px\" scale=\"xl\" color=\"white\">\n          {t('Ready to launch in 3,2,1 go...')}\n        </Heading>\n        <Text textAlign=\"center\" color=\"white\" className='text' >\n          {t('Ready to accelerate, all you have to do is just connect your wallet to start the engine.')}\n        </Text>\n        <Text mb=\"24px\" bold color=\"white\" className='text' >\n          {t('No registration needed.')}\n        </Text>\n\n        <Link external color='white' href=\"https://docs.silverlineswap.finance/\">\n          {t('Learn how to start')}\n        </Link>\n        {!account && <ConnectWalletButton className='sl-sky-glow' variant='secondary' mt=\"24px\" width='174px' fontWeight='400' />}\n      </Wrapper>\n    </>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTotalSupply, useBurnedBalance } from 'hooks/useTokenBalance'\nimport { getBalanceNumber, formatLocalisedCompactNumber } from 'utils/formatBalance'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { Flex, Text, Heading, Skeleton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport tokens from 'config/constants/tokens'\n\nconst StyledColumn = styled(Flex)<{ noMobileBorder?: boolean }>`\n  flex-direction: column;\n  ${({ noMobileBorder, theme }) =>\n    noMobileBorder\n      ? `${theme.mediaQueries.md} {\n           padding: 0 16px;\n           border-left: 1px ${theme.colors.inputSecondary} solid;\n         }\n       `\n      : `border-left: 1px ${theme.colors.inputSecondary} solid;\n         padding: 0 8px;\n         ${theme.mediaQueries.sm} {\n           padding: 0 16px;\n         }\n       `}\n`\n\nconst Grid = styled.div`\n  display: grid;\n  grid-gap: 16px 8px;\n  margin-top: 24px;\n  grid-template-columns: repeat(2, auto);\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-gap: 16px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-gap: 32px;\n    grid-template-columns: repeat(4, auto);\n  }\n`\n\nconst emissionsPerBlock = 14.25\n\nconst CakeDataRow = () => {\n  const { t } = useTranslation()\n  const totalSupply = useTotalSupply()\n  const burnedBalance = getBalanceNumber(useBurnedBalance(tokens.cake.address))\n  const cakeSupply = totalSupply ? getBalanceNumber(totalSupply) - burnedBalance : 0\n  const cakePriceBusd = usePriceCakeBusd()\n  const mcap = cakePriceBusd.times(cakeSupply)\n  const mcapString = formatLocalisedCompactNumber(mcap.toNumber())\n\n  return (\n    <Grid>\n      <Flex flexDirection=\"column\">\n        <Text color=\"textSubtle\">{t('Total supply')}</Text>\n        {cakeSupply ? (\n          <Balance decimals={0} lineHeight=\"1.1\" fontSize=\"24px\" bold value={cakeSupply} />\n        ) : (\n          <Skeleton height={24} width={126} my=\"4px\" />\n        )}\n      </Flex>\n      <StyledColumn>\n        <Text color=\"textSubtle\">{t('Burned to date')}</Text>\n        {burnedBalance ? (\n          <Balance decimals={0} lineHeight=\"1.1\" fontSize=\"24px\" bold value={burnedBalance} />\n        ) : (\n          <Skeleton height={24} width={126} my=\"4px\" />\n        )}\n      </StyledColumn>\n      <StyledColumn noMobileBorder>\n        <Text color=\"textSubtle\">{t('Market cap')}</Text>\n        {mcap?.gt(0) && mcapString ? (\n          <Heading scale=\"lg\">{t('$%marketCap%', { marketCap: mcapString })}</Heading>\n        ) : (\n          <Skeleton height={24} width={126} my=\"4px\" />\n        )}\n      </StyledColumn>\n      <StyledColumn>\n        <Text color=\"textSubtle\">{t('Current emissions')}</Text>\n\n        <Heading scale=\"lg\">{t('%cakeEmissions%/block', { cakeEmissions: emissionsPerBlock })}</Heading>\n      </StyledColumn>\n    </Grid>\n  )\n}\n\nexport default CakeDataRow\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport masterChefABI from 'config/abi/masterchef.json'\nimport { farmsConfig } from 'config/constants'\nimport { SerializedFarmConfig } from 'config/constants/types'\nimport { useFastFresh } from 'hooks/useRefresh'\nimport { DEFAULT_TOKEN_DECIMAL } from 'config'\n\nexport interface FarmWithBalance extends SerializedFarmConfig {\n  balance: BigNumber\n}\n\nconst useFarmsWithBalance = () => {\n  const [farmsWithStakedBalance, setFarmsWithStakedBalance] = useState<FarmWithBalance[]>([])\n  const [earningsSum, setEarningsSum] = useState<number>(null)\n  const { account } = useWeb3React()\n  const fastRefresh = useFastFresh()\n\n  useEffect(() => {\n    const fetchBalances = async () => {\n      const calls = farmsConfig.map((farm) => ({\n        address: getMasterChefAddress(),\n        name: 'pendingCake',\n        params: [farm.pid, account],\n      }))\n\n      const rawResults = await multicall(masterChefABI, calls)\n      const results = farmsConfig.map((farm, index) => ({ ...farm, balance: new BigNumber(rawResults[index]) }))\n      const farmsWithBalances = results.filter((balanceType) => balanceType.balance.gt(0))\n      const totalEarned = farmsWithBalances.reduce((accum, earning) => {\n        const earningNumber = new BigNumber(earning.balance)\n        if (earningNumber.eq(0)) {\n          return accum\n        }\n        return accum + earningNumber.div(DEFAULT_TOKEN_DECIMAL).toNumber()\n      }, 0)\n\n      setFarmsWithStakedBalance(farmsWithBalances)\n      setEarningsSum(totalEarned)\n    }\n\n    if (account) {\n      fetchBalances()\n    }\n  }, [account, fastRefresh])\n\n  return { farmsWithStakedBalance, earningsSum }\n}\n\nexport default useFarmsWithBalance\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { AutoRenewIcon, Button, Card, CardBody, Flex, Skeleton, Text, ArrowForwardIcon } from '@pancakeswap/uikit'\nimport { Link } from 'react-router-dom'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport useToast from 'hooks/useToast'\nimport { useMasterchef } from 'hooks/useContract'\nimport { harvestFarm } from 'utils/calls'\nimport Balance from 'components/Balance'\nimport { logError } from 'utils/sentry'\nimport useFarmsWithBalance from 'views/Home/hooks/useFarmsWithBalance'\nimport { getEarningsText } from './EarningsText'\n\nconst StyledCard = styled(Card)`\n  width: 100%;\n  height: fit-content;\n`\n\nconst HarvestCard = () => {\n  const [pendingTx, setPendingTx] = useState(false)\n  const { t } = useTranslation()\n  const { toastSuccess, toastError } = useToast()\n  const { farmsWithStakedBalance, earningsSum: farmEarningsSum } = useFarmsWithBalance()\n\n  const masterChefContract = useMasterchef()\n  const cakePriceBusd = usePriceCakeBusd()\n  const earningsBusd = new BigNumber(farmEarningsSum).multipliedBy(cakePriceBusd)\n  const numTotalToCollect = farmsWithStakedBalance.length\n  const numFarmsToCollect = farmsWithStakedBalance.filter((value) => value.pid !== 0).length\n  const hasCakePoolToCollect = numTotalToCollect - numFarmsToCollect > 0\n\n  const earningsText = getEarningsText(numFarmsToCollect, hasCakePoolToCollect, earningsBusd, t)\n  const [preText, toCollectText] = earningsText.split(earningsBusd.toString())\n\n  const harvestAllFarms = useCallback(async () => {\n    setPendingTx(true)\n    // eslint-disable-next-line no-restricted-syntax\n    for (const farmWithBalance of farmsWithStakedBalance) {\n      try {\n        // eslint-disable-next-line no-await-in-loop\n        await harvestFarm(masterChefContract, farmWithBalance.pid)\n        toastSuccess(\n          `${t('Harvested')}!`,\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: 'SLCT' }),\n        )\n      } catch (error) {\n        logError(error)\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      }\n    }\n    setPendingTx(false)\n  }, [farmsWithStakedBalance, masterChefContract, toastSuccess, toastError, t])\n\n  return (\n    <StyledCard>\n      <CardBody>\n        <Flex flexDirection={['column', null, null, 'row']} justifyContent=\"space-between\" alignItems=\"center\">\n          <Flex flexDirection=\"column\" alignItems={['center', null, null, 'flex-start']}>\n            {preText && (\n              <Text mb=\"4px\" color=\"textSubtle\">\n                {preText}\n              </Text>\n            )}\n            {/* {!earningsBusd.isNaN() ? (\n              <Balance\n                decimals={earningsBusd.gt(0) ? 2 : 0}\n                fontSize=\"24px\"\n                bold\n                prefix={earningsBusd.gt(0) ? '~$' : '$'}\n                lineHeight=\"1.1\"\n                value={earningsBusd.toNumber()}\n              />\n            ) : (\n              <Skeleton width={96} height={24} my=\"2px\" />\n            )} */}\n            <Text mb={['16px', null, null, '0']} color=\"textSubtle\">\n              SPARCTANS, Let&quot;s begin!\n            </Text>\n          </Flex>\n          {numTotalToCollect <= 0 ? (\n            <Link to=\"sparc\">\n              <Button width={['100%', null, null, 'auto']} variant=\"secondary\">\n                <Text color=\"text\" bold>\n                  {t('Play SPARC')}\n                </Text>\n                <ArrowForwardIcon ml=\"4px\" color=\"text\" />\n              </Button>\n            </Link>\n          ) : (\n            <Button\n              width={['100%', null, null, 'auto']}\n              id=\"harvest-all\"\n              isLoading={pendingTx}\n              endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n              disabled={pendingTx}\n              onClick={harvestAllFarms}\n              variant='primary'\n            >\n              <Text color=\"text\" bold>\n                {pendingTx ? t('Harvesting') : t('Harvest all')}\n              </Text>\n            </Button>\n          )}\n        </Flex>\n      </CardBody>\n    </StyledCard>\n  )\n}\n\nexport default HarvestCard\n","import { ContextApi } from 'contexts/Localization/types'\nimport BigNumber from 'bignumber.js'\n\nexport const getEarningsText = (\n  numFarmsToCollect: number,\n  hasCakePoolToCollect: boolean,\n  earningsBusd: BigNumber,\n  t: ContextApi['t'],\n): string => {\n  const data = {\n    earningsBusd: earningsBusd.toString(),\n    count: numFarmsToCollect,\n  }\n\n  let earningsText = t('%earningsBusd% to collect', data)\n\n  if (numFarmsToCollect > 0 && hasCakePoolToCollect) {\n    if (numFarmsToCollect > 1) {\n      earningsText = t('%earningsBusd% to collect from %count% farms and SLCT pool', data)\n    } else {\n      earningsText = t('%earningsBusd% to collect from %count% farm and SLCT pool', data)\n    }\n  } else if (numFarmsToCollect > 0) {\n    if (numFarmsToCollect > 1) {\n      earningsText = t('%earningsBusd% to collect from %count% farms', data)\n    } else {\n      earningsText = t('%earningsBusd% to collect from %count% farm', data)\n    }\n  } else if (hasCakePoolToCollect) {\n    earningsText = t('%earningsBusd% to collect from SLCT pool', data)\n  }\n\n  return earningsText\n}\n","import React from 'react'\nimport { NoProfileAvatarIcon, Flex, Heading, Skeleton, Text, Box } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport styled from 'styled-components'\nimport { useProfile } from 'state/profile/hooks'\nimport ProfileAvatarWithTeam from 'components/ProfileAvatarWithTeam'\nimport { useTranslation } from 'contexts/Localization'\nimport truncateHash from 'utils/truncateHash'\n\nconst Desktop = styled(Flex)`\n  align-items: center;\n  display: none;\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: flex;\n  }\n`\n\nconst Mobile = styled(Flex)`\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: none;\n  }\n`\n\nconst Sticker = styled(Flex)`\n  height: 92px;\n  width: 92px;\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n  border: 3px solid ${({ theme }) => theme.colors.invertedContrast};\n  border-radius: ${({ theme }) => theme.radii.circle};\n  box-shadow: ${({ theme }) => theme.card.boxShadow};\n`\n\nconst StyledNoProfileAvatarIcon = styled(NoProfileAvatarIcon)`\n  height: 100%;\n  width: 100%;\n`\n\nconst UserDetail = () => {\n  const { profile, isLoading } = useProfile()\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const truncatedAddress = truncateHash(account)\n\n  const getDesktopHeading = () => {\n    if (profile) {\n      return <Heading scale=\"xl\">{t('Hi, %userName%!', { userName: profile.username })}</Heading>\n    }\n    if (isLoading && !profile) {\n      return <Skeleton width={200} height={40} my=\"4px\" />\n    }\n    return <></>\n  }\n\n  const getMobileHeading = () => {\n    if (profile) {\n      return (\n        <Heading mb=\"18px\" textAlign=\"center\">\n          {t('Hi, %userName%!', { userName: profile.username })}\n        </Heading>\n      )\n    }\n    if (isLoading && !profile) {\n      return <Skeleton width={120} height={20} mt=\"2px\" mb=\"18px\" />\n    }\n    return <></>\n  }\n\n  return (\n    <>\n      <Desktop>\n        <Box mr=\"24px\">\n          <Sticker>{profile ? <ProfileAvatarWithTeam profile={profile} /> : <img src=\"/images/help.png\" alt=\"\" />}</Sticker>\n        </Box>\n        <Flex flexDirection=\"column\">\n          {getDesktopHeading()}\n          {isLoading || !account ? (\n            <Skeleton width={160} height={16} my=\"4px\" />\n          ) : (\n            <Text fontSize=\"16px\"> {t('Connected with %address%', { address: truncatedAddress })}</Text>\n          )}\n        </Flex>\n      </Desktop>\n      <Mobile>{getMobileHeading()}</Mobile>\n    </>\n  )\n}\n\nexport default UserDetail\n","import React from 'react'\nimport { Box, Flex } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport HarvestCard from './HarvestCard'\nimport UserDetail from './UserDetail'\n\nconst StyledCard = styled(Box)`\n  border-bottom: 1px ${({ theme }) => theme.colors.secondary} solid;\n  border-left: 1px ${({ theme }) => theme.colors.secondary} solid;\n  border-right: 1px ${({ theme }) => theme.colors.secondary} solid;\n  border-radius: ${({ theme }) => `0 0 ${theme.radii.card} ${theme.radii.card}`};\n  background: ${({ theme }) =>\n    theme.isDark\n      ? 'linear-gradient(360deg, rgba(49, 61, 92, 0.9) 0%, rgba(61, 42, 84, 0.9) 100%)'\n      : 'linear-gradient(180deg, rgba(202, 194, 236, 0.9) 0%,  rgba(204, 220, 239, 0.9) 51.04%, rgba(206, 236, 243, 0.9) 100%)'};\n`\n\nconst UserBanner = () => {\n  return (\n    <StyledCard p={['16px', null, null, '24px']}>\n      <Flex alignItems=\"center\" justifyContent=\"center\" flexDirection={['column', null, null, 'row']}>\n        <Flex flex=\"1\" mr={[null, null, null, '32px']}>\n          <UserDetail />\n        </Flex>\n        <Flex flex=\"1\" width={['100%', null, 'auto']}>\n          <HarvestCard />\n        </Flex>\n      </Flex>\n    </StyledCard>\n  )\n}\n\nexport default UserBanner\n","import React from 'react'\nimport { Flex } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport PageSection from 'components/PageSection'\nimport { useWeb3React } from '@web3-react/core'\nimport useTheme from 'hooks/useTheme'\nimport Container from 'components/Layout/Container'\nimport { PageMeta } from 'components/Layout/Page'\nimport Hero from './components/Hero'\nimport { swapSectionData, earnSectionData, cakeSectionData } from './components/SalesSection/data'\nimport MetricsSection from './components/MetricsSection'\nimport SalesSection from './components/SalesSection'\nimport WinSection from './components/WinSection'\nimport FarmsPoolsRow from './components/FarmsPoolsRow'\nimport Footer from './components/Footer'\nimport CakeDataRow from './components/CakeDataRow'\nimport { WedgeTopLeft, InnerWedgeWrapper, OuterWedgeWrapper, WedgeTopRight } from './components/WedgeSvgs'\nimport UserBanner from './components/UserBanner'\nimport IFOBanner from './components/Banners/IFOBanner'\n\nconst showBanner = true\n\nconst HomeBanner = ({ account }: { account: string }) => {\n  if (!showBanner) {\n    return null\n  }\n\n  return (\n    <Flex\n      pt={[account ? '220px' : '0', null, null, account ? '76px' : '0']}\n      mt={[account ? '0' : '-16px', null, null, account ? '0' : '-48px']}\n      pb=\"24px\"\n    >\n      <IFOBanner />\n    </Flex>\n  )\n}\n\nconst StyledHeroSection = styled(PageSection)`\n  padding-top: 16px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    padding-top: 48px;\n  }\n`\n\nconst UserBannerWrapper = styled(Container)`\n  z-index: 1;\n  position: absolute;\n  width: 100%;\n  top: 0;\n  left: 50%;\n  transform: translate(-50%, 0);\n  padding-left: 0px;\n  padding-right: 0px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-left: 24px;\n    padding-right: 24px;\n  }\n`\n\nconst Home: React.FC = () => {\n  const { theme } = useTheme()\n  const { account } = useWeb3React()\n\n  const HomeSectionContainerStyles = { margin: '0', width: '100%', maxWidth: '968px' }\n\n  return (\n    <>\n      <PageMeta />\n      <StyledHeroSection\n        innerProps={{ style: { margin: '0', width: '100%' } }}\n        background='transparent'\n        index={2}\n        hasCurvedDivider={false}\n      >\n        {account && (\n          <UserBannerWrapper>\n            <UserBanner />\n          </UserBannerWrapper>\n        )}\n        {/* <HomeBanner account={account} /> */}\n        <Hero />\n      </StyledHeroSection>\n      <PageSection\n        innerProps={{ style: { margin: '0', width: '100%' } }}\n        background='transparent'\n        index={2}\n        hasCurvedDivider={false}\n      >\n        <MetricsSection />\n      </PageSection>\n      <PageSection\n        innerProps={{ style: HomeSectionContainerStyles }}\n        background='transparent'\n        index={2}\n        hasCurvedDivider={false}\n      >\n        <SalesSection {...swapSectionData} />\n      </PageSection>\n      <PageSection\n        innerProps={{ style: HomeSectionContainerStyles }}\n        background='transparent'\n        index={2}\n        hasCurvedDivider={false}\n      >\n        <SalesSection {...earnSectionData} />\n        <FarmsPoolsRow />\n      </PageSection>\n      <PageSection\n        innerProps={{ style: HomeSectionContainerStyles }}\n        background='transparent'\n        index={2}\n        hasCurvedDivider={false}\n      >\n        <WinSection />\n      </PageSection>\n      <PageSection\n        innerProps={{ style: HomeSectionContainerStyles }}\n        background='transparent'\n        index={2}\n        hasCurvedDivider={false}\n      >\n        <SalesSection {...cakeSectionData} />\n        <CakeDataRow />\n      </PageSection>\n      <PageSection\n        innerProps={{ style: HomeSectionContainerStyles }}\n        background=\"linear-gradient(180deg, #7645D9 0%, #5121B1 100%)\"\n        index={2}\n        hasCurvedDivider={false}\n      >\n        <Footer />\n      </PageSection>\n    </>\n  )\n}\n\nexport default Home\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Flex, Button, ArrowForwardIcon, Heading } from '@pancakeswap/uikit'\nimport { Link } from 'react-router-dom'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledSubheading = styled(Heading)`\n  background: -webkit-linear-gradient(#ffd800, #eb8c00);\n  font-size: 20px;\n  background-clip: text;\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  -webkit-text-stroke: 1px rgba(0, 0, 0, 0.5);\n  ${({ theme }) => theme.mediaQueries.xs} {\n    font-size: 24px;\n  }\n  ${({ theme }) => theme.mediaQueries.sm} {\n    -webkit-text-stroke: unset;\n  }\n  margin-bottom: 8px;\n`\n\nconst StyledHeading = styled(Heading)`\n  color: #ffffff;\n  background: -webkit-linear-gradient(#7645d9 0%, #452a7a 100%);\n  background-clip: text;\n  -webkit-background-clip: text;\n  -webkit-text-stroke: 6px transparent;\n  text-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  margin-bottom: 16px;\n`\n\nconst Wrapper = styled.div`\n  border-radius: 32px;\n  width: 100%;\n  background-image: linear-gradient(#7645d9, #452a7a);\n  max-height: max-content;\n  overflow: hidden;\n`\n\nconst Inner = styled(Flex)`\n  position: relative;\n  padding: 24px;\n  flex-direction: row;\n  justify-content: space-between;\n  max-height: 220px;\n`\n\nconst LeftWrapper = styled(Flex)`\n  z-index: 1;\n  width: 100%;\n  flex-direction: column;\n  justify-content: center;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    padding-top: 40px;\n    padding-bottom: 40px;\n  }\n`\n\nconst RightWrapper = styled.div`\n  position: absolute;\n  right: -17px;\n  opacity: 0.9;\n  transform: translate(0, -50%);\n  top: 50%;\n\n  & img {\n    height: 100%;\n    width: 174px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    position: relative;\n    display: flex;\n    align-items: center;\n    justify-content: flex-end;\n    right: 24px;\n    top: 0;\n    transform: unset;\n    opacity: 1;\n\n    & img {\n      height: 130%;\n      width: unset;\n    }\n  }\n`\n\nconst IFOBanner = () => {\n  const { t } = useTranslation()\n\n  return (\n    <Wrapper>\n      <Inner>\n        <LeftWrapper>\n          <StyledSubheading>{t('Soon')}</StyledSubheading>\n          <StyledHeading scale=\"xl\">Froyo IFO</StyledHeading>\n          <Link to=\"/ifo\">\n            <Button>\n              <Text color=\"invertedContrast\" bold fontSize=\"16px\" mr=\"4px\">\n                {t('Go to IFO')}\n              </Text>\n              <ArrowForwardIcon color=\"invertedContrast\" />\n            </Button>\n          </Link>\n        </LeftWrapper>\n        <RightWrapper>\n          <img src=\"/images/decorations/3d-ifo-froyo.png\" alt=\"IFO Froyo\" />\n        </RightWrapper>\n      </Inner>\n    </Wrapper>\n  )\n}\n\nexport default IFOBanner\n","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import React from 'react'\nimport styled, { css, DefaultTheme } from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\nimport { ClipFill } from '../types'\n\ninterface CurveProps {\n  clipFill?: ClipFill\n}\n\ninterface ContainerProps extends CurveProps {\n  clipPath: string\n}\n\nconst sharedStyles = (theme: DefaultTheme, clipPath: string, clipFill?: ClipFill) => css`\n  width: 100%;\n  height: 20px;\n  clip-path: url(${clipPath});\n\n  background: ${() => {\n    if (theme.isDark) {\n      return clipFill?.dark || clipFill?.light || theme.colors.background\n    }\n    return clipFill?.light || theme.colors.background\n  }};\n\n  & svg {\n    display: block;\n  }\n`\n\nconst ConcaveContainer = styled(Box)<ContainerProps>`\n  ${({ theme, clipPath, clipFill }) => sharedStyles(theme, clipPath, clipFill)}\n  transform: ${({ clipPath }) => (clipPath === '#bottomConcaveCurve' ? 'translate(0, -13px)' : 'translate(0, 1px)')};\n`\n\nconst ConvexContainer = styled(Box)<ContainerProps>`\n  ${({ theme, clipPath, clipFill }) => sharedStyles(theme, clipPath, clipFill)}\n  transform: ${({ clipPath }) => (clipPath === '#bottomConvexCurve' ? 'translate(0, -13px)' : 'translate(0, -1px)')};\n`\n\nexport const ConvexTop: React.FC<CurveProps> = ({ clipFill }) => (\n  <ConvexContainer clipFill={clipFill} clipPath=\"#topConvexCurve\">\n    <svg width=\"0\" height=\"0\">\n      <defs>\n        <clipPath id=\"topConvexCurve\" clipPathUnits=\"objectBoundingBox\">\n          <path d=\"M 0,1 L 0,0 L 1,0 L 1,1 C 0.75 0, .25 0, 0 1 Z\" />\n        </clipPath>\n      </defs>\n    </svg>\n  </ConvexContainer>\n)\n\nexport const ConvexBottom: React.FC<CurveProps> = ({ clipFill }) => (\n  <ConvexContainer clipFill={clipFill} clipPath=\"#bottomConvexCurve\">\n    <svg width=\"0\" height=\"0\">\n      <defs>\n        <clipPath id=\"bottomConvexCurve\" clipPathUnits=\"objectBoundingBox\">\n          <path d=\"M 0,0 L 0,1 L 1,1 L 1,0 C .75 1, .25 1, 0 0 Z\" />\n        </clipPath>\n      </defs>\n    </svg>\n  </ConvexContainer>\n)\n\nexport const ConcaveTop: React.FC<CurveProps> = ({ clipFill }) => (\n  <ConcaveContainer clipFill={clipFill} clipPath=\"#topConcaveCurve\">\n    <svg width=\"0\" height=\"0\">\n      <defs>\n        <clipPath id=\"topConcaveCurve\" clipPathUnits=\"objectBoundingBox\">\n          <path d=\"M 0,0 L 0,1 L 1,1 L 1,0 C .75 1, .25 1, 0 0 Z\" />\n        </clipPath>\n      </defs>\n    </svg>\n  </ConcaveContainer>\n)\n\nexport const ConcaveBottom: React.FC<CurveProps> = ({ clipFill }) => (\n  <ConcaveContainer clipFill={clipFill} clipPath=\"#bottomConcaveCurve\">\n    <svg width=\"0\" height=\"0\">\n      <defs>\n        <clipPath id=\"bottomConcaveCurve\" clipPathUnits=\"objectBoundingBox\">\n          <path d=\"M 0,1 L 0,0 L 1,0 L 1,1 C .75 0.1, .25 0.1, 0 1 Z\" />\n        </clipPath>\n      </defs>\n    </svg>\n  </ConcaveContainer>\n)\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ConcaveTop, ConcaveBottom, ConvexTop, ConvexBottom } from './svg/CurvedSvg'\nimport { DividerFill, ClipFill } from './types'\n\ninterface CurvedDividerProps extends WrapperProps {\n  svgFill?: string\n  dividerComponent?: React.ReactNode\n  dividerPosition?: 'top' | 'bottom'\n  concave?: boolean\n  clipFill?: ClipFill\n}\ninterface WrapperProps {\n  index: number\n  dividerFill?: DividerFill\n}\n\nconst Wrapper = styled.div<WrapperProps>`\n  background: ${({ theme, dividerFill }) => {\n    if (theme.isDark) {\n      return dividerFill?.dark || dividerFill?.light || 'none'\n    }\n    return dividerFill?.light || dividerFill?.dark || 'none'\n  }};\n  z-index: ${({ index }) => index};\n  position: relative;\n  display: flex;\n  align-items: center;\n  width: 100%;\n`\n\nconst ComponentWrapper = styled.div<WrapperProps>`\n  z-index: ${({ index }) => index + 1};\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`\n\nconst CurvedDivider: React.FC<CurvedDividerProps> = ({\n  index,\n  dividerPosition,\n  dividerComponent,\n  concave,\n  clipFill,\n  dividerFill,\n}) => {\n  const showConvexTop = dividerPosition === 'top' && !concave\n  const showConvexBottom = dividerPosition === 'bottom' && !concave\n  const showConcaveTop = dividerPosition === 'top' && concave\n  const showConcaveBottom = dividerPosition === 'bottom' && concave\n\n  const getConcaveDivider = () => {\n    return (\n      <>\n        {showConcaveTop && <ConcaveTop clipFill={clipFill} />}\n        {showConcaveBottom && <ConcaveBottom clipFill={clipFill} />}\n      </>\n    )\n  }\n\n  const getConvexDivider = () => {\n    return (\n      <>\n        {showConvexTop && <ConvexTop clipFill={clipFill} />}\n        {showConvexBottom && <ConvexBottom clipFill={clipFill} />}\n      </>\n    )\n  }\n\n  return (\n    <Wrapper index={index} dividerFill={dividerFill}>\n      {dividerComponent && <ComponentWrapper index={index}>{dividerComponent}</ComponentWrapper>}\n      {getConcaveDivider()}\n      {getConvexDivider()}\n    </Wrapper>\n  )\n}\n\nexport default CurvedDivider\n","import React from 'react'\nimport styled from 'styled-components'\nimport { BoxProps, Box, Flex, FlexProps } from '@pancakeswap/uikit'\nimport Container from 'components/Layout/Container'\nimport CurvedDivider from './CurvedDivider'\nimport { ClipFill, DividerFill } from './types'\n\ninterface PageSectionProps extends BackgroundColorProps {\n  svgFill?: string\n  dividerComponent?: React.ReactNode\n  hasCurvedDivider?: boolean\n  dividerPosition?: 'top' | 'bottom'\n  concaveDivider?: boolean\n  containerProps?: BoxProps\n  innerProps?: BoxProps\n  clipFill?: ClipFill\n  dividerFill?: DividerFill\n}\n\ninterface BackgroundColorProps extends FlexProps {\n  index: number\n  background?: string\n  getPadding?: () => string\n}\n\nconst BackgroundColor = styled(Flex)<BackgroundColorProps>`\n  position: relative;\n  flex-direction: column;\n  align-items: center;\n  z-index: ${({ index }) => index - 1};\n  background: ${({ background, theme }) => background || theme.colors.background};\n  padding: ${({ getPadding }) => getPadding()};\n`\n\nconst ChildrenWrapper = styled(Container)`\n  min-height: auto;\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 48px;\n    padding-bottom: 48px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xxl} {\n    max-width: 1150px !important;\n  }\n`\n\nconst PageSection: React.FC<PageSectionProps> = ({\n  children,\n  background,\n  svgFill,\n  index = 1,\n  dividerComponent,\n  dividerPosition = 'bottom',\n  hasCurvedDivider = true,\n  concaveDivider = false,\n  clipFill,\n  dividerFill,\n  containerProps,\n  innerProps,\n  ...props\n}) => {\n  const getPadding = () => {\n    // No curved divider\n    if (!hasCurvedDivider) {\n      return '48px 0'\n    }\n    // Bottom curved divider\n    // Less bottom padding, as the divider is present there\n    if (dividerPosition === 'bottom') {\n      return '48px 0 14px'\n    }\n    // Top curved divider\n    // Less top padding, as the divider is present there\n    if (dividerPosition === 'top') {\n      return '14px 0 48px'\n    }\n    return '48px 0'\n  }\n\n  return (\n    <Box {...containerProps} >\n      {hasCurvedDivider && dividerPosition === 'top' && (\n        <CurvedDivider\n          // svgFill={svgFill}\n          index={index}\n          concave={concaveDivider}\n          dividerPosition={dividerPosition}\n          dividerComponent={dividerComponent}\n          clipFill={clipFill}\n          dividerFill={dividerFill}\n        />\n      )}\n      <BackgroundColor background={background} index={index} getPadding={getPadding} {...props}>\n        <ChildrenWrapper {...innerProps}>{children}</ChildrenWrapper>\n      </BackgroundColor>\n      {hasCurvedDivider && dividerPosition === 'bottom' && (\n        <CurvedDivider\n          // svgFill={svgFill}\n          index={index}\n          concave={concaveDivider}\n          dividerPosition={dividerPosition}\n          dividerComponent={dividerComponent}\n          clipFill={clipFill}\n          dividerFill={dividerFill}\n        />\n      )}\n    </Box>\n  )\n}\n\nexport default PageSection\n","import React from 'react'\nimport { NoProfileAvatarIcon } from '@pancakeswap/uikit'\nimport { Profile } from 'state/types'\nimport styled from 'styled-components'\n\nexport interface ProfileAvatarProps {\n  profile: Profile\n}\n\nconst TeamAvatar = styled.img`\n  border: 1px solid ${({ theme }) => theme.card.background};\n  border-radius: 50%;\n  bottom: 0px;\n  position: absolute;\n  right: 0px;\n  min-width: 20px;\n  min-height: 20px;\n  width: 37.5%;\n  height: 37.5%;\n  z-index: 5;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    border-width: 2px;\n  }\n`\n\nconst AvatarWrapper = styled.div<{ bg: string }>`\n  background: url('${({ bg }) => bg}');\n  background-repeat: no-repeat;\n  background-size: cover;\n  border-radius: 50%;\n  position: relative;\n  width: 100%;\n  height: 100%;\n\n  & > img {\n    border-radius: 50%;\n  }\n`\n// TODO: replace with no profile avatar icon\nconst AvatarInactive = styled(NoProfileAvatarIcon)`\n  width: 100%;\n  height: 100%;\n`\n\nconst ProfileAvatarWithTeam: React.FC<ProfileAvatarProps> = ({ profile }) => {\n  return (\n    <AvatarWrapper bg={profile.nft?.image.thumbnail}>\n      {!profile.isActive && <AvatarInactive />}\n      <TeamAvatar src={`/images/teams/${profile.team.images.alt}`} alt={profile.team.name} />\n    </AvatarWrapper>\n  )\n}\n\nexport default ProfileAvatarWithTeam\n","import React from 'react'\nimport { Colors, Heading, TextProps } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\n\ninterface HeadingProps extends TextProps {\n  text: string\n  firstColor?: keyof Colors\n}\n\nconst ColoredWordHeading: React.FC<HeadingProps> = ({ text, firstColor, mb = '24px', ...props }) => {\n  const { theme } = useTheme()\n  const split = text.split(' ')\n  const firstWord = split[0]\n  const remainingWords = split.slice(1).join(' ')\n  const displayedColor = (theme.colors[firstColor] as string) ?? theme.colors.secondary\n\n  return (\n    <Heading scale=\"xl\" mb={mb} {...props}>\n      <span style={{ color: displayedColor }}>{firstWord} </span>\n      {remainingWords}\n    </Heading>\n  )\n}\n\nexport default ColoredWordHeading\n"],"sourceRoot":""}